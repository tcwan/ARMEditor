/*
 * generated by Xtext
 */
grammar InternalARM;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.ARMGrammarAccess;

}

@parser::members {

 	private ARMGrammarAccess grammarAccess;
 	
    public InternalARMParser(TokenStream input, ARMGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ARMGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsARMInstrParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleARMInstr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"ARMInstr");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleARMInstr
entryRuleARMInstr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARMInstrRule()); }
	 iv_ruleARMInstr=ruleARMInstr 
	 { $current=$iv_ruleARMInstr.current; } 
	 EOF 
;

// Rule ARMInstr
ruleARMInstr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getARMInstrAccess().getCcodeParserRuleCall_0()); 
    }
    this_Ccode_0=ruleCcode
    { 
        $current = $this_Ccode_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getARMInstrAccess().getOperationInstrParserRuleCall_1()); 
    }
    this_OperationInstr_1=ruleOperationInstr
    { 
        $current = $this_OperationInstr_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOperationInstr
entryRuleOperationInstr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationInstrRule()); }
	 iv_ruleOperationInstr=ruleOperationInstr 
	 { $current=$iv_ruleOperationInstr.current; } 
	 EOF 
;

// Rule OperationInstr
ruleOperationInstr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getAdd_sub_instrParserRuleCall_0()); 
    }
    this_add_sub_instr_0=ruleadd_sub_instr
    { 
        $current = $this_add_sub_instr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getAdrl_adr_instrParserRuleCall_1()); 
    }
    this_adrl_adr_instr_1=ruleadrl_adr_instr
    { 
        $current = $this_adrl_adr_instr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getMul_3R_instrParserRuleCall_2()); 
    }
    this_mul_3R_instr_2=rulemul_3R_instr
    { 
        $current = $this_mul_3R_instr_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getMul_4R_instrParserRuleCall_3()); 
    }
    this_mul_4R_instr_3=rulemul_4R_instr
    { 
        $current = $this_mul_4R_instr_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getMov_instrParserRuleCall_4()); 
    }
    this_mov_instr_4=rulemov_instr
    { 
        $current = $this_mov_instr_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getShift_instrParserRuleCall_5()); 
    }
    this_shift_instr_5=ruleshift_instr
    { 
        $current = $this_shift_instr_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getClz_instrParserRuleCall_6()); 
    }
    this_clz_instr_6=ruleclz_instr
    { 
        $current = $this_clz_instr_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getCompare_test_instrParserRuleCall_7()); 
    }
    this_compare_test_instr_7=rulecompare_test_instr
    { 
        $current = $this_compare_test_instr_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLogical_instrParserRuleCall_8()); 
    }
    this_logical_instr_8=rulelogical_instr
    { 
        $current = $this_logical_instr_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getBranch_instrParserRuleCall_9()); 
    }
    this_branch_instr_9=rulebranch_instr
    { 
        $current = $this_branch_instr_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getMrs_instrParserRuleCall_10()); 
    }
    this_mrs_instr_10=rulemrs_instr
    { 
        $current = $this_mrs_instr_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getMsr_instrParserRuleCall_11()); 
    }
    this_msr_instr_11=rulemsr_instr
    { 
        $current = $this_msr_instr_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLdr_str_irpre_instrParserRuleCall_12()); 
    }
    this_ldr_str_irpre_instr_12=ruleldr_str_irpre_instr
    { 
        $current = $this_ldr_str_irpre_instr_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLdr_str_spre_instrParserRuleCall_13()); 
    }
    this_ldr_str_spre_instr_13=ruleldr_str_spre_instr
    { 
        $current = $this_ldr_str_spre_instr_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLdr_str_irpsot_instrParserRuleCall_14()); 
    }
    this_ldr_str_irpsot_instr_14=ruleldr_str_irpsot_instr
    { 
        $current = $this_ldr_str_irpsot_instr_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLdr_str_rpost_instrParserRuleCall_15()); 
    }
    this_ldr_str_rpost_instr_15=ruleldr_str_rpost_instr
    { 
        $current = $this_ldr_str_rpost_instr_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getLdm_instrParserRuleCall_16()); 
    }
    this_ldm_instr_16=ruleldm_instr
    { 
        $current = $this_ldm_instr_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getPush_pop_instrParserRuleCall_17()); 
    }
    this_push_pop_instr_17=rulepush_pop_instr
    { 
        $current = $this_push_pop_instr_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getBkpt_instrParserRuleCall_18()); 
    }
    this_bkpt_instr_18=rulebkpt_instr
    { 
        $current = $this_bkpt_instr_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getSvc_instrParserRuleCall_19()); 
    }
    this_svc_instr_19=rulesvc_instr
    { 
        $current = $this_svc_instr_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getSwp_instrParserRuleCall_20()); 
    }
    this_swp_instr_20=ruleswp_instr
    { 
        $current = $this_swp_instr_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationInstrAccess().getNOPParserRuleCall_21()); 
    }
    this_NOP_21=ruleNOP
    { 
        $current = $this_NOP_21.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCcode
entryRuleCcode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCcodeRule()); }
	 iv_ruleCcode=ruleCcode 
	 { $current=$iv_ruleCcode.current; } 
	 EOF 
;

// Rule Ccode
ruleCcode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCcodeAccess().getReverseSolidusKeyword_0_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getPREPROCESSORParserRuleCall_0_1()); 
    }
    this_PREPROCESSOR_1=rulePREPROCESSOR
    { 
        $current = $this_PREPROCESSOR_1.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCcodeAccess().getLeftParenthesisKeyword_0_2_0());
    }
)?(	otherlv_3='defined' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCcodeAccess().getDefinedKeyword_0_2_1());
    }
)?(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCcodeAccess().getLeftParenthesisKeyword_0_2_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_0_2_3_0()); 
	    }
		lv_expression_5_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCcodeAccess().getRightParenthesisKeyword_0_2_4());
    }
)?((	otherlv_7='||' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCcodeAccess().getVerticalLineVerticalLineKeyword_0_2_5_0_0());
    }

    |	otherlv_8='&&' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCcodeAccess().getAmpersandAmpersandKeyword_0_2_5_0_1());
    }
)(	otherlv_9='defined' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCcodeAccess().getDefinedKeyword_0_2_5_1());
    }
)?(	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCcodeAccess().getLeftParenthesisKeyword_0_2_5_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_0_2_5_3_0()); 
	    }
		lv_expression2_11_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_11_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCcodeAccess().getRightParenthesisKeyword_0_2_5_4());
    }
)?)*(	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCcodeAccess().getRightParenthesisKeyword_0_2_6());
    }
)?)?)
    |((	otherlv_14='\\' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCcodeAccess().getReverseSolidusKeyword_1_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getPREPROCESSOR_DEFINEParserRuleCall_1_1()); 
    }
    this_PREPROCESSOR_DEFINE_15=rulePREPROCESSOR_DEFINE
    { 
        $current = $this_PREPROCESSOR_DEFINE_15.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_1_2_0_0()); 
	    }
		lv_expression_16_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_16_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_1_2_1_0()); 
	    }
		lv_expression2_17_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_17_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
    |
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getPREPROCESSOR_ENDIFParserRuleCall_2()); 
    }
    this_PREPROCESSOR_ENDIF_18=rulePREPROCESSOR_ENDIF
    { 
        $current = $this_PREPROCESSOR_ENDIF_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getPREPROCESSOR_ELSEParserRuleCall_3()); 
    }
    this_PREPROCESSOR_ELSE_19=rulePREPROCESSOR_ELSE
    { 
        $current = $this_PREPROCESSOR_ELSE_19.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getCExtendCodeParserRuleCall_4_0()); 
    }
    this_CExtendCode_20=ruleCExtendCode
    { 
        $current = $this_CExtendCode_20.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_4_1_0_0()); 
	    }
		lv_expression_21_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_21_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getCcodeAccess().getCommaKeyword_4_1_1_0());
    }
(	otherlv_23='.' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getCcodeAccess().getFullStopKeyword_4_1_1_1_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_expression2_24_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"expression2",
        		lv_expression2_24_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getAssembler_Directives_equParserRuleCall_5_0()); 
    }
    this_Assembler_Directives_equ_25=ruleAssembler_Directives_equ
    { 
        $current = $this_Assembler_Directives_equ_25.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_5_1_0_0()); 
	    }
		lv_expression_26_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_26_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getCcodeAccess().getCommaKeyword_5_1_1_0());
    }
(	otherlv_28='.' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getCcodeAccess().getFullStopKeyword_5_1_1_1_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_5_1_1_1_1_0()); 
	    }
		lv_expression2_29_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"expression2",
        		lv_expression2_29_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getAssembler_DirectivesParserRuleCall_6_0()); 
    }
    this_Assembler_Directives_30=ruleAssembler_Directives
    { 
        $current = $this_Assembler_Directives_30.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_6_1_0_0()); 
	    }
		lv_expression_31_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_31_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_32=',' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getCcodeAccess().getCommaKeyword_6_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_6_1_1_1_0()); 
	    }
		lv_expression2_33_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_33_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getAssembler_Directives_macroParserRuleCall_7_0()); 
    }
    this_Assembler_Directives_macro_34=ruleAssembler_Directives_macro
    { 
        $current = $this_Assembler_Directives_macro_34.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionDefinitionParserRuleCall_7_1_0_0()); 
	    }
		lv_expression_35_0=ruledefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_35_0, 
        		"definition");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_36=',' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getCcodeAccess().getCommaKeyword_7_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getDefinitionDefinitionParserRuleCall_7_1_1_1_0()); 
	    }
		lv_definition_37_0=ruledefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_37_0, 
        		"definition");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getAssember_Directives_typeParserRuleCall_8_0()); 
    }
    this_Assember_Directives_type_38=ruleAssember_Directives_type
    { 
        $current = $this_Assember_Directives_type_38.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_8_1_0_0()); 
	    }
		lv_expression_39_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_39_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_40=',' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getCcodeAccess().getCommaKeyword_8_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getDescriptionDescriptionParserRuleCall_8_1_1_1_0()); 
	    }
		lv_description_41_0=ruledescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"description",
        		lv_description_41_0, 
        		"description");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
    |
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getAssembler_Directives_endmParserRuleCall_9()); 
    }
    this_Assembler_Directives_endm_42=ruleAssembler_Directives_endm
    { 
        $current = $this_Assembler_Directives_endm_42.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_Machine_DirectivesParserRuleCall_10_0()); 
    }
    this_ARM_Machine_Directives_43=ruleARM_Machine_Directives
    { 
        $current = $this_ARM_Machine_Directives_43.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_10_1_0_0()); 
	    }
		lv_expression_44_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_44_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_45=',' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getCcodeAccess().getCommaKeyword_10_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpression2VariableParserRuleCall_10_1_1_1_0()); 
	    }
		lv_expression2_46_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_46_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_MACHINE_DIRECTIVES_alignParserRuleCall_11_0()); 
    }
    this_ARM_MACHINE_DIRECTIVES_align_47=ruleARM_MACHINE_DIRECTIVES_align
    { 
        $current = $this_ARM_MACHINE_DIRECTIVES_align_47.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getIntMyINTParserRuleCall_11_1_0_0()); 
	    }
		lv_int_48_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"int",
        		lv_int_48_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_hex_49_0=RULE_HEX
		{
			newLeafNode(lv_hex_49_0, grammarAccess.getCcodeAccess().getHexHEXTerminalRuleCall_11_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCcodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_49_0, 
        		"HEX");
	    }

)
))?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_Machine_Directives_codeParserRuleCall_12_0()); 
    }
    this_ARM_Machine_Directives_code_50=ruleARM_Machine_Directives_code
    { 
        $current = $this_ARM_Machine_Directives_code_50.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_arm_51_0=	'16' 
    {
        newLeafNode(lv_arm_51_0, grammarAccess.getCcodeAccess().getArm16Keyword_12_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCcodeRule());
	        }
       		setWithLastConsumed($current, "arm", true, "16");
	    }

)
)
    |(
(
		lv_thumb_52_0=	'32' 
    {
        newLeafNode(lv_thumb_52_0, grammarAccess.getCcodeAccess().getThumb32Keyword_12_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCcodeRule());
	        }
       		setWithLastConsumed($current, "thumb", true, "32");
	    }

)
)))
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_Machine_Directives_syntaxParserRuleCall_13_0()); 
    }
    this_ARM_Machine_Directives_syntax_53=ruleARM_Machine_Directives_syntax
    { 
        $current = $this_ARM_Machine_Directives_syntax_53.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_54='unified' 
    {
    	newLeafNode(otherlv_54, grammarAccess.getCcodeAccess().getUnifiedKeyword_13_1_0());
    }

    |	otherlv_55='divided' 
    {
    	newLeafNode(otherlv_55, grammarAccess.getCcodeAccess().getDividedKeyword_13_1_1());
    }
))
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_Machine_Directives_saveParserRuleCall_14_0()); 
    }
    this_ARM_Machine_Directives_save_56=ruleARM_Machine_Directives_save
    { 
        $current = $this_ARM_Machine_Directives_save_56.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_57='{' 
    {
    	newLeafNode(otherlv_57, grammarAccess.getCcodeAccess().getLeftCurlyBracketKeyword_14_1());
    }
)?(
(
		lv_reglist_58_0=RULE_ID
		{
			newLeafNode(lv_reglist_58_0, grammarAccess.getCcodeAccess().getReglistIDTerminalRuleCall_14_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCcodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"reglist",
        		lv_reglist_58_0, 
        		"ID");
	    }

)
)((	otherlv_59=',' 
    {
    	newLeafNode(otherlv_59, grammarAccess.getCcodeAccess().getCommaKeyword_14_3_0_0());
    }
(
(
		lv_reglist_60_0=RULE_ID
		{
			newLeafNode(lv_reglist_60_0, grammarAccess.getCcodeAccess().getReglistIDTerminalRuleCall_14_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCcodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"reglist",
        		lv_reglist_60_0, 
        		"ID");
	    }

)
))
    |(	otherlv_61=',' 
    {
    	newLeafNode(otherlv_61, grammarAccess.getCcodeAccess().getCommaKeyword_14_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getReglistNumMyINTParserRuleCall_14_3_1_1_0()); 
	    }
		lv_reglistNum_62_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"reglistNum",
        		lv_reglistNum_62_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)))*(	otherlv_63='}' 
    {
    	newLeafNode(otherlv_63, grammarAccess.getCcodeAccess().getRightCurlyBracketKeyword_14_4());
    }
)?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getARM_Machine_Directives_saveParserRuleCall_15_0()); 
    }
    this_ARM_Machine_Directives_save_64=ruleARM_Machine_Directives_save
    { 
        $current = $this_ARM_Machine_Directives_save_64.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_65='{' 
    {
    	newLeafNode(otherlv_65, grammarAccess.getCcodeAccess().getLeftCurlyBracketKeyword_15_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getRegisterREGISTERParserRuleCall_15_2_0()); 
	    }
		lv_register_66_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_66_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_67=',' 
    {
    	newLeafNode(otherlv_67, grammarAccess.getCcodeAccess().getCommaKeyword_15_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getRegisterREGISTERParserRuleCall_15_3_1_0()); 
	    }
		lv_register_68_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_68_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_69='}' 
    {
    	newLeafNode(otherlv_69, grammarAccess.getCcodeAccess().getRightCurlyBracketKeyword_15_4());
    }
)?)
    |(
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getCExtendascizParserRuleCall_16_0()); 
    }
    this_CExtendasciz_70=ruleCExtendasciz
    { 
        $current = $this_CExtendasciz_70.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_16_1_0()); 
	    }
		lv_expression_71_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_71_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((	otherlv_72='\\' 
    {
    	newLeafNode(otherlv_72, grammarAccess.getCcodeAccess().getReverseSolidusKeyword_17_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getCLangParserRuleCall_17_1()); 
    }
    this_CLang_73=ruleCLang
    { 
        $current = $this_CLang_73.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getExpressionVariableParserRuleCall_17_2_0()); 
	    }
		lv_expression_74_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_74_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCcodeAccess().getLabel_keywordLabel_keywordParserRuleCall_18_0()); 
	    }
		lv_label_keyword_75_0=rulelabel_keyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCcodeRule());
	        }
       		add(
       			$current, 
       			"label_keyword",
        		lv_label_keyword_75_0, 
        		"label_keyword");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((	otherlv_76='\\' 
    {
    	newLeafNode(otherlv_76, grammarAccess.getCcodeAccess().getReverseSolidusKeyword_19_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getVariable_colonParserRuleCall_19_1()); 
    }
    this_variable_colon_77=rulevariable_colon
    { 
        $current = $this_variable_colon_77.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getCcodeAccess().getVariable_variableParserRuleCall_20()); 
    }
    this_variable_variable_78=rulevariable_variable
    { 
        $current = $this_variable_variable_78.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulevariable_variable
entryRulevariable_variable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_variableRule()); }
	 iv_rulevariable_variable=rulevariable_variable 
	 { $current=$iv_rulevariable_variable.current; } 
	 EOF 
;

// Rule variable_variable
rulevariable_variable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_variableAccess().getVariableVariableParserRuleCall_0_0()); 
	    }
		lv_variable_0_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_variableRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariable_variableAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_variableAccess().getVariable2VariableParserRuleCall_1_1_0()); 
	    }
		lv_variable2_2_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_variableRule());
	        }
       		add(
       			$current, 
       			"variable2",
        		lv_variable2_2_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulevariable_colon
entryRulevariable_colon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_colonRule()); }
	 iv_rulevariable_colon=rulevariable_colon 
	 { $current=$iv_rulevariable_colon.current; } 
	 EOF 
;

// Rule variable_colon
rulevariable_colon returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_variable_0_0=RULE_ID
		{
			newLeafNode(lv_variable_0_0, grammarAccess.getVariable_colonAccess().getVariableIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariable_colonRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_colonAccess().getVariableINTMyINTParserRuleCall_0_1_0()); 
	    }
		lv_variableINT_1_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_colonRule());
	        }
       		add(
       			$current, 
       			"variableINT",
        		lv_variableINT_1_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariable_colonAccess().getColonKeyword_1());
    }
)
;





// Entry rule entryRulelabel_keyword
entryRulelabel_keyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabel_keywordRule()); }
	 iv_rulelabel_keyword=rulelabel_keyword 
	 { $current=$iv_rulelabel_keyword.current; } 
	 EOF 
;

// Rule label_keyword
rulelabel_keyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_label_0_0=RULE_ID
		{
			newLeafNode(lv_label_0_0, grammarAccess.getLabel_keywordAccess().getLabelIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabel_keywordRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_0_0, 
        		"ID");
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getLabel_keywordAccess().getVariableVariableParserRuleCall_1_0_0_0()); 
	    }
		lv_variable_1_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabel_keywordRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLabel_keywordAccess().getRegisterREGISTERParserRuleCall_1_0_1_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabel_keywordRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLabel_keywordAccess().getCommaKeyword_1_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLabel_keywordAccess().getVariable2VariableParserRuleCall_1_1_1_0_0()); 
	    }
		lv_variable2_4_0=rulevariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabel_keywordRule());
	        }
       		add(
       			$current, 
       			"variable2",
        		lv_variable2_4_0, 
        		"variable");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLabel_keywordAccess().getRegisterREGISTERParserRuleCall_1_1_1_1_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabel_keywordRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)?)
;





// Entry rule entryRuleadd_sub_instr
entryRuleadd_sub_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdd_sub_instrRule()); }
	 iv_ruleadd_sub_instr=ruleadd_sub_instr 
	 { $current=$iv_ruleadd_sub_instr.current; } 
	 EOF 
;

// Rule add_sub_instr
ruleadd_sub_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getADD_OPParserRuleCall_0_0()); 
    }
    this_ADD_OP_0=ruleADD_OP
    { 
        $current = $this_ADD_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getADC_OPParserRuleCall_0_1()); 
    }
    this_ADC_OP_1=ruleADC_OP
    { 
        $current = $this_ADC_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getADR_OPParserRuleCall_0_2()); 
    }
    this_ADR_OP_2=ruleADR_OP
    { 
        $current = $this_ADR_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getSUB_OPParserRuleCall_0_3()); 
    }
    this_SUB_OP_3=ruleSUB_OP
    { 
        $current = $this_SUB_OP_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getSBC_OPParserRuleCall_0_4()); 
    }
    this_SBC_OP_4=ruleSBC_OP
    { 
        $current = $this_SBC_OP_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getRSB_OPParserRuleCall_0_5()); 
    }
    this_RSB_OP_5=ruleRSB_OP
    { 
        $current = $this_RSB_OP_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getRSC_OPParserRuleCall_0_6()); 
    }
    this_RSC_OP_6=ruleRSC_OP
    { 
        $current = $this_RSC_OP_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getADRL_OPParserRuleCall_0_7()); 
    }
    this_ADRL_OP_7=ruleADRL_OP
    { 
        $current = $this_ADRL_OP_7.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_8_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdd_sub_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_8_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAdd_sub_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_10_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdd_sub_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_10_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAdd_sub_instrAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdd_sub_instrAccess().getOperand2Operand2ParserRuleCall_1_4_0()); 
	    }
		lv_Operand2_12_0=ruleOperand2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdd_sub_instrRule());
	        }
       		add(
       			$current, 
       			"Operand2",
        		lv_Operand2_12_0, 
        		"Operand2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleadrl_adr_instr
entryRuleadrl_adr_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdrl_adr_instrRule()); }
	 iv_ruleadrl_adr_instr=ruleadrl_adr_instr 
	 { $current=$iv_ruleadrl_adr_instr.current; } 
	 EOF 
;

// Rule adrl_adr_instr
ruleadrl_adr_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getAdrl_adr_instrAccess().getADRL_OPParserRuleCall_0_0()); 
    }
    this_ADRL_OP_0=ruleADRL_OP
    { 
        $current = $this_ADRL_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAdrl_adr_instrAccess().getADR_OPParserRuleCall_0_1()); 
    }
    this_ADR_OP_1=ruleADR_OP
    { 
        $current = $this_ADR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAdrl_adr_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdrl_adr_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAdrl_adr_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdrl_adr_instrAccess().getExpressionRandomEntryParserRuleCall_1_2_0()); 
	    }
		lv_expression_4_0=rulerandomEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdrl_adr_instrRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"randomEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRulemul_3R_instr
entryRulemul_3R_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMul_3R_instrRule()); }
	 iv_rulemul_3R_instr=rulemul_3R_instr 
	 { $current=$iv_rulemul_3R_instr.current; } 
	 EOF 
;

// Rule mul_3R_instr
rulemul_3R_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getMUL_OPParserRuleCall_0_0()); 
    }
    this_MUL_OP_0=ruleMUL_OP
    { 
        $current = $this_MUL_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getSMUL_OPParserRuleCall_0_1()); 
    }
    this_SMUL_OP_1=ruleSMUL_OP
    { 
        $current = $this_SMUL_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getSMULW_OPParserRuleCall_0_2()); 
    }
    this_SMULW_OP_2=ruleSMULW_OP
    { 
        $current = $this_SMULW_OP_2.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_3_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_3R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_3_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMul_3R_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_3R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMul_3R_instrAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMul_3R_instrAccess().getRegisterREGISTERParserRuleCall_1_4_0()); 
	    }
		lv_register_7_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_3R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_7_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulemul_4R_instr
entryRulemul_4R_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMul_4R_instrRule()); }
	 iv_rulemul_4R_instr=rulemul_4R_instr 
	 { $current=$iv_rulemul_4R_instr.current; } 
	 EOF 
;

// Rule mul_4R_instr
rulemul_4R_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getMLA_OPParserRuleCall_0_0()); 
    }
    this_MLA_OP_0=ruleMLA_OP
    { 
        $current = $this_MLA_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getUMULL_OPParserRuleCall_0_1()); 
    }
    this_UMULL_OP_1=ruleUMULL_OP
    { 
        $current = $this_UMULL_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getUMLAL_OPParserRuleCall_0_2()); 
    }
    this_UMLAL_OP_2=ruleUMLAL_OP
    { 
        $current = $this_UMLAL_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getSMULL_OPParserRuleCall_0_3()); 
    }
    this_SMULL_OP_3=ruleSMULL_OP
    { 
        $current = $this_SMULL_OP_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getSMLAL_OPParserRuleCall_0_4()); 
    }
    this_SMLAL_OP_4=ruleSMLAL_OP
    { 
        $current = $this_SMLAL_OP_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getMLS_OPParserRuleCall_0_5()); 
    }
    this_MLS_OP_5=ruleMLS_OP
    { 
        $current = $this_MLS_OP_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getSMLA_OPParserRuleCall_0_6()); 
    }
    this_SMLA_OP_6=ruleSMLA_OP
    { 
        $current = $this_SMLA_OP_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getSMLAW_OPParserRuleCall_0_7()); 
    }
    this_SMLAW_OP_7=ruleSMLAW_OP
    { 
        $current = $this_SMLAW_OP_7.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_8_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_4R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_8_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMul_4R_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_10_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_4R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_10_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMul_4R_instrAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getRegisterREGISTERParserRuleCall_1_4_0()); 
	    }
		lv_register_12_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_4R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_12_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMul_4R_instrAccess().getCommaKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMul_4R_instrAccess().getRegisterREGISTERParserRuleCall_1_6_0()); 
	    }
		lv_register_14_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMul_4R_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_14_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulemov_instr
entryRulemov_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMov_instrRule()); }
	 iv_rulemov_instr=rulemov_instr 
	 { $current=$iv_rulemov_instr.current; } 
	 EOF 
;

// Rule mov_instr
rulemov_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMov_instrAccess().getMOV_OPParserRuleCall_0_0()); 
    }
    this_MOV_OP_0=ruleMOV_OP
    { 
        $current = $this_MOV_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMov_instrAccess().getMVN_OPParserRuleCall_0_1()); 
    }
    this_MVN_OP_1=ruleMVN_OP
    { 
        $current = $this_MVN_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMov_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMov_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMov_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMov_instrAccess().getOperand2Operand2ParserRuleCall_1_2_0()); 
	    }
		lv_Operand2_4_0=ruleOperand2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMov_instrRule());
	        }
       		add(
       			$current, 
       			"Operand2",
        		lv_Operand2_4_0, 
        		"Operand2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleshift_instr
entryRuleshift_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShift_instrRule()); }
	 iv_ruleshift_instr=ruleshift_instr 
	 { $current=$iv_ruleshift_instr.current; } 
	 EOF 
;

// Rule shift_instr
ruleshift_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getShift_instrAccess().getASR_OPParserRuleCall_0_0()); 
    }
    this_ASR_OP_0=ruleASR_OP
    { 
        $current = $this_ASR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getShift_instrAccess().getLSL_OPParserRuleCall_0_1()); 
    }
    this_LSL_OP_1=ruleLSL_OP
    { 
        $current = $this_LSL_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getShift_instrAccess().getLSR_OPParserRuleCall_0_2()); 
    }
    this_LSR_OP_2=ruleLSR_OP
    { 
        $current = $this_LSR_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getShift_instrAccess().getROR_OPParserRuleCall_0_3()); 
    }
    this_ROR_OP_3=ruleROR_OP
    { 
        $current = $this_ROR_OP_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getShift_instrAccess().getRRX_OPParserRuleCall_0_4()); 
    }
    this_RRX_OP_4=ruleRRX_OP
    { 
        $current = $this_RRX_OP_4.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getShift_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShift_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getShift_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShift_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_7_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShift_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_7_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getShift_instrAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShift_instrAccess().getRs_shRs_shParserRuleCall_1_4_0()); 
	    }
		lv_rs_sh_9_0=rulers_sh		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShift_instrRule());
	        }
       		add(
       			$current, 
       			"rs_sh",
        		lv_rs_sh_9_0, 
        		"rs_sh");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleclz_instr
entryRuleclz_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClz_instrRule()); }
	 iv_ruleclz_instr=ruleclz_instr 
	 { $current=$iv_ruleclz_instr.current; } 
	 EOF 
;

// Rule clz_instr
ruleclz_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClz_instrAccess().getCLZ_OPParserRuleCall_0()); 
    }
    this_CLZ_OP_0=ruleCLZ_OP
    { 
        $current = $this_CLZ_OP_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClz_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_1_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClz_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_1_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClz_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClz_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_3_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClz_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_3_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulecompare_test_instr
entryRulecompare_test_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompare_test_instrRule()); }
	 iv_rulecompare_test_instr=rulecompare_test_instr 
	 { $current=$iv_rulecompare_test_instr.current; } 
	 EOF 
;

// Rule compare_test_instr
rulecompare_test_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getCMP_OPParserRuleCall_0_0()); 
    }
    this_CMP_OP_0=ruleCMP_OP
    { 
        $current = $this_CMP_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getCMN_OPParserRuleCall_0_1()); 
    }
    this_CMN_OP_1=ruleCMN_OP
    { 
        $current = $this_CMN_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getTST_OPParserRuleCall_0_2()); 
    }
    this_TST_OP_2=ruleTST_OP
    { 
        $current = $this_TST_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getTEQ_OPParserRuleCall_0_3()); 
    }
    this_TEQ_OP_3=ruleTEQ_OP
    { 
        $current = $this_TEQ_OP_3.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_4_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompare_test_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_4_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCompare_test_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompare_test_instrAccess().getOperand2Operand2ParserRuleCall_1_2_0()); 
	    }
		lv_Operand2_6_0=ruleOperand2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompare_test_instrRule());
	        }
       		add(
       			$current, 
       			"Operand2",
        		lv_Operand2_6_0, 
        		"Operand2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulelogical_instr
entryRulelogical_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_instrRule()); }
	 iv_rulelogical_instr=rulelogical_instr 
	 { $current=$iv_rulelogical_instr.current; } 
	 EOF 
;

// Rule logical_instr
rulelogical_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLogical_instrAccess().getAND_OPParserRuleCall_0_0()); 
    }
    this_AND_OP_0=ruleAND_OP
    { 
        $current = $this_AND_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLogical_instrAccess().getEOR_OPParserRuleCall_0_1()); 
    }
    this_EOR_OP_1=ruleEOR_OP
    { 
        $current = $this_EOR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLogical_instrAccess().getORR_OPParserRuleCall_0_2()); 
    }
    this_ORR_OP_2=ruleORR_OP
    { 
        $current = $this_ORR_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLogical_instrAccess().getORN_OPParserRuleCall_0_3()); 
    }
    this_ORN_OP_3=ruleORN_OP
    { 
        $current = $this_ORN_OP_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLogical_instrAccess().getBIC_OPParserRuleCall_0_4()); 
    }
    this_BIC_OP_4=ruleBIC_OP
    { 
        $current = $this_BIC_OP_4.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLogical_instrAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_instrAccess().getRegisterREGISTERParserRuleCall_1_1_1_0()); 
	    }
		lv_register_7_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_7_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLogical_instrAccess().getCommaKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_instrAccess().getOperand2Operand2ParserRuleCall_1_3_0()); 
	    }
		lv_Operand2_9_0=ruleOperand2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_instrRule());
	        }
       		add(
       			$current, 
       			"Operand2",
        		lv_Operand2_9_0, 
        		"Operand2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulebranch_instr
entryRulebranch_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranch_instrRule()); }
	 iv_rulebranch_instr=rulebranch_instr 
	 { $current=$iv_rulebranch_instr.current; } 
	 EOF 
;

// Rule branch_instr
rulebranch_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getBranch_instrAccess().getB_OPParserRuleCall_0_0()); 
    }
    this_B_OP_0=ruleB_OP
    { 
        $current = $this_B_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBranch_instrAccess().getBL_OPParserRuleCall_0_1()); 
    }
    this_BL_OP_1=ruleBL_OP
    { 
        $current = $this_BL_OP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBranch_instrAccess().getBX_OPParserRuleCall_0_2()); 
    }
    this_BX_OP_2=ruleBX_OP
    { 
        $current = $this_BX_OP_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBranch_instrAccess().getBLX_OPParserRuleCall_0_3()); 
    }
    this_BLX_OP_3=ruleBLX_OP
    { 
        $current = $this_BLX_OP_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBranch_instrAccess().getBXJ_OPParserRuleCall_0_4()); 
    }
    this_BXJ_OP_4=ruleBXJ_OP
    { 
        $current = $this_BXJ_OP_4.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getBranch_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_0_0()); 
	    }
		lv_immediate_label_5_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranch_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_5_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBranch_instrAccess().getRegisterREGISTERParserRuleCall_1_1_0()); 
	    }
		lv_register_6_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranch_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_6_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulemrs_instr
entryRulemrs_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMrs_instrRule()); }
	 iv_rulemrs_instr=rulemrs_instr 
	 { $current=$iv_rulemrs_instr.current; } 
	 EOF 
;

// Rule mrs_instr
rulemrs_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMrs_instrAccess().getMRS_OPParserRuleCall_0()); 
    }
    this_MRS_OP_0=ruleMRS_OP
    { 
        $current = $this_MRS_OP_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMrs_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_1_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMrs_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_1_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMrs_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMrs_instrAccess().getPSR_FIELDPSR_FIELD_EParserRuleCall_1_2_0()); 
	    }
		lv_PSR_FIELD_3_0=rulePSR_FIELD_E		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMrs_instrRule());
	        }
       		add(
       			$current, 
       			"PSR_FIELD",
        		lv_PSR_FIELD_3_0, 
        		"PSR_FIELD_E");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulemsr_instr
entryRulemsr_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsr_instrRule()); }
	 iv_rulemsr_instr=rulemsr_instr 
	 { $current=$iv_rulemsr_instr.current; } 
	 EOF 
;

// Rule msr_instr
rulemsr_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsr_instrAccess().getMSR_OPParserRuleCall_0()); 
    }
    this_MSR_OP_0=ruleMSR_OP
    { 
        $current = $this_MSR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getMsr_instrAccess().getAPSR_FLAGAPSR_FLAG_EParserRuleCall_1_0_0_0()); 
	    }
		lv_APSR_FLAG_1_0=ruleAPSR_FLAG_E		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsr_instrRule());
	        }
       		add(
       			$current, 
       			"APSR_FLAG",
        		lv_APSR_FLAG_1_0, 
        		"APSR_FLAG_E");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMsr_instrAccess().getPSR_FIELDPSR_FIELD_EParserRuleCall_1_0_1_0()); 
	    }
		lv_PSR_FIELD_2_0=rulePSR_FIELD_E		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsr_instrRule());
	        }
       		add(
       			$current, 
       			"PSR_FIELD",
        		lv_PSR_FIELD_2_0, 
        		"PSR_FIELD_E");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsr_instrAccess().getCommaKeyword_1_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMsr_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0_0()); 
	    }
		lv_register_4_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsr_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_4_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMsr_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_2_1_0()); 
	    }
		lv_immediate_label_5_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsr_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_5_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleldr_str_irpre_instr
entryRuleldr_str_irpre_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdr_str_irpre_instrRule()); }
	 iv_ruleldr_str_irpre_instr=ruleldr_str_irpre_instr 
	 { $current=$iv_ruleldr_str_irpre_instr.current; } 
	 EOF 
;

// Rule ldr_str_irpre_instr
ruleldr_str_irpre_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getLDR_OPParserRuleCall_0_0()); 
    }
    this_LDR_OP_0=ruleLDR_OP
    { 
        $current = $this_LDR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getSTR_OPParserRuleCall_0_1()); 
    }
    this_STR_OP_1=ruleSTR_OP
    { 
        $current = $this_STR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLdr_str_irpre_instrAccess().getCommaKeyword_1_1_0_0());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLdr_str_irpre_instrAccess().getLeftSquareBracketKeyword_1_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getRegisterREGISTERParserRuleCall_1_1_0_2_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLdr_str_irpre_instrAccess().getCommaKeyword_1_1_0_3_0_0());
    }
(	otherlv_7='+' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLdr_str_irpre_instrAccess().getPlusSignKeyword_1_1_0_3_0_1_0());
    }

    |	otherlv_8='-' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLdr_str_irpre_instrAccess().getHyphenMinusKeyword_1_1_0_3_0_1_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getRegisterREGISTERParserRuleCall_1_1_0_3_0_2_0_0()); 
	    }
		lv_register_9_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_9_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_1_0_3_0_2_1_0()); 
	    }
		lv_immediate_label_10_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_10_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)))?	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLdr_str_irpre_instrAccess().getRightSquareBracketKeyword_1_1_0_3_1());
    }
(	otherlv_12='!' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLdr_str_irpre_instrAccess().getExclamationMarkKeyword_1_1_0_3_2());
    }
)?))
    |(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLdr_str_irpre_instrAccess().getCommaKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_1_1_1_0()); 
	    }
		lv_immediate_label_14_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_14_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)))(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLdr_str_irpre_instrAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpre_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_2_1_0()); 
	    }
		lv_immediate_label_16_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpre_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_16_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleldr_str_spre_instr
entryRuleldr_str_spre_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdr_str_spre_instrRule()); }
	 iv_ruleldr_str_spre_instr=ruleldr_str_spre_instr 
	 { $current=$iv_ruleldr_str_spre_instr.current; } 
	 EOF 
;

// Rule ldr_str_spre_instr
ruleldr_str_spre_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getLDR_OPParserRuleCall_0_0()); 
    }
    this_LDR_OP_0=ruleLDR_OP
    { 
        $current = $this_LDR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getSTR_OPParserRuleCall_0_1()); 
    }
    this_STR_OP_1=ruleSTR_OP
    { 
        $current = $this_STR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_spre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLdr_str_spre_instrAccess().getCommaKeyword_1_1());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLdr_str_spre_instrAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getRegisterREGISTERParserRuleCall_1_3_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_spre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLdr_str_spre_instrAccess().getCommaKeyword_1_4());
    }
(	otherlv_7='+' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLdr_str_spre_instrAccess().getPlusSignKeyword_1_5_0());
    }

    |	otherlv_8='-' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLdr_str_spre_instrAccess().getHyphenMinusKeyword_1_5_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getRegisterREGISTERParserRuleCall_1_6_0()); 
	    }
		lv_register_9_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_spre_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_9_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLdr_str_spre_instrAccess().getCommaKeyword_1_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getBAREL_SHIFT_REGISTERBAREL_SHIFT_REGISTERParserRuleCall_1_8_0()); 
	    }
		lv_BAREL_SHIFT_REGISTER_11_0=ruleBAREL_SHIFT_REGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_spre_instrRule());
	        }
       		add(
       			$current, 
       			"BAREL_SHIFT_REGISTER",
        		lv_BAREL_SHIFT_REGISTER_11_0, 
        		"BAREL_SHIFT_REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_spre_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_9_0()); 
	    }
		lv_immediate_label_12_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_spre_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_12_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLdr_str_spre_instrAccess().getRightSquareBracketKeyword_1_10());
    }
(	otherlv_14='!' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLdr_str_spre_instrAccess().getExclamationMarkKeyword_1_11());
    }
)?))
;





// Entry rule entryRuleldr_str_irpsot_instr
entryRuleldr_str_irpsot_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdr_str_irpsot_instrRule()); }
	 iv_ruleldr_str_irpsot_instr=ruleldr_str_irpsot_instr 
	 { $current=$iv_ruleldr_str_irpsot_instr.current; } 
	 EOF 
;

// Rule ldr_str_irpsot_instr
ruleldr_str_irpsot_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getLDR_OPParserRuleCall_0_0()); 
    }
    this_LDR_OP_0=ruleLDR_OP
    { 
        $current = $this_LDR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getSTR_OPParserRuleCall_0_1()); 
    }
    this_STR_OP_1=ruleSTR_OP
    { 
        $current = $this_STR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpsot_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLdr_str_irpsot_instrAccess().getCommaKeyword_1_1());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLdr_str_irpsot_instrAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getRegisterREGISTERParserRuleCall_1_3_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpsot_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLdr_str_irpsot_instrAccess().getRightSquareBracketKeyword_1_4());
    }
	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLdr_str_irpsot_instrAccess().getCommaKeyword_1_5());
    }
(	otherlv_8='#' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLdr_str_irpsot_instrAccess().getNumberSignKeyword_1_6());
    }
)?(	otherlv_9='+' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLdr_str_irpsot_instrAccess().getPlusSignKeyword_1_7_0());
    }

    |	otherlv_10='-' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLdr_str_irpsot_instrAccess().getHyphenMinusKeyword_1_7_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getRegisterREGISTERParserRuleCall_1_8_0_0()); 
	    }
		lv_register_11_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpsot_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_11_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_irpsot_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_8_1_0()); 
	    }
		lv_immediate_label_12_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_irpsot_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_12_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleldr_str_rpost_instr
entryRuleldr_str_rpost_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdr_str_rpost_instrRule()); }
	 iv_ruleldr_str_rpost_instr=ruleldr_str_rpost_instr 
	 { $current=$iv_ruleldr_str_rpost_instr.current; } 
	 EOF 
;

// Rule ldr_str_rpost_instr
ruleldr_str_rpost_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getLDR_OPParserRuleCall_0_0()); 
    }
    this_LDR_OP_0=ruleLDR_OP
    { 
        $current = $this_LDR_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getSTR_OPParserRuleCall_0_1()); 
    }
    this_STR_OP_1=ruleSTR_OP
    { 
        $current = $this_STR_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_rpost_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLdr_str_rpost_instrAccess().getCommaKeyword_1_1());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLdr_str_rpost_instrAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getRegisterREGISTERParserRuleCall_1_3_0()); 
	    }
		lv_register_5_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_rpost_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_5_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLdr_str_rpost_instrAccess().getRightSquareBracketKeyword_1_4());
    }
	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLdr_str_rpost_instrAccess().getCommaKeyword_1_5());
    }
(	otherlv_8='+' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLdr_str_rpost_instrAccess().getPlusSignKeyword_1_6_0());
    }

    |	otherlv_9='-' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLdr_str_rpost_instrAccess().getHyphenMinusKeyword_1_6_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getRegisterREGISTERParserRuleCall_1_7_0()); 
	    }
		lv_register_10_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_rpost_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_10_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLdr_str_rpost_instrAccess().getCommaKeyword_1_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getBAREL_SHIFT_REGISTERBAREL_SHIFT_REGISTERParserRuleCall_1_9_0()); 
	    }
		lv_BAREL_SHIFT_REGISTER_12_0=ruleBAREL_SHIFT_REGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_rpost_instrRule());
	        }
       		add(
       			$current, 
       			"BAREL_SHIFT_REGISTER",
        		lv_BAREL_SHIFT_REGISTER_12_0, 
        		"BAREL_SHIFT_REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLdr_str_rpost_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_10_0()); 
	    }
		lv_immediate_label_13_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdr_str_rpost_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_13_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleldm_instr
entryRuleldm_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdm_instrRule()); }
	 iv_ruleldm_instr=ruleldm_instr 
	 { $current=$iv_ruleldm_instr.current; } 
	 EOF 
;

// Rule ldm_instr
ruleldm_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLdm_instrAccess().getLDM_OPParserRuleCall_0_0()); 
    }
    this_LDM_OP_0=ruleLDM_OP
    { 
        $current = $this_LDM_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdm_instrAccess().getSTM_OPParserRuleCall_0_1()); 
    }
    this_STM_OP_1=ruleSTM_OP
    { 
        $current = $this_STM_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLdm_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdm_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='!' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLdm_instrAccess().getExclamationMarkKeyword_1_1());
    }
)?	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLdm_instrAccess().getCommaKeyword_1_2());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLdm_instrAccess().getLeftCurlyBracketKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdm_instrAccess().getRegisterREGISTERParserRuleCall_1_4_0()); 
	    }
		lv_register_6_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdm_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_6_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='-' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLdm_instrAccess().getHyphenMinusKeyword_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdm_instrAccess().getRegisterREGISTERParserRuleCall_1_5_1_0()); 
	    }
		lv_register_8_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdm_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_8_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLdm_instrAccess().getCommaKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdm_instrAccess().getRegisterREGISTERParserRuleCall_1_6_1_0()); 
	    }
		lv_register_10_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdm_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_10_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='-' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLdm_instrAccess().getHyphenMinusKeyword_1_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLdm_instrAccess().getRegisterREGISTERParserRuleCall_1_6_2_1_0()); 
	    }
		lv_register_12_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLdm_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_12_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLdm_instrAccess().getRightCurlyBracketKeyword_1_7());
    }
(	otherlv_14='^' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLdm_instrAccess().getCircumflexAccentKeyword_1_8());
    }
)?))
;





// Entry rule entryRulepush_pop_instr
entryRulepush_pop_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPush_pop_instrRule()); }
	 iv_rulepush_pop_instr=rulepush_pop_instr 
	 { $current=$iv_rulepush_pop_instr.current; } 
	 EOF 
;

// Rule push_pop_instr
rulepush_pop_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getPUSH_OPParserRuleCall_0_0()); 
    }
    this_PUSH_OP_0=rulePUSH_OP
    { 
        $current = $this_PUSH_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getPOP_OPParserRuleCall_0_1()); 
    }
    this_POP_OP_1=rulePOP_OP
    { 
        $current = $this_POP_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPush_pop_instrAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getRegisterREGISTERParserRuleCall_2_0_0()); 
	    }
		lv_register_3_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPush_pop_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_3_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='+' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPush_pop_instrAccess().getPlusSignKeyword_2_1_0());
    }

    |(	otherlv_5='-' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPush_pop_instrAccess().getHyphenMinusKeyword_2_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getRegisterREGISTERParserRuleCall_2_1_1_1_0()); 
	    }
		lv_register_6_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPush_pop_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_6_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPush_pop_instrAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getRegisterREGISTERParserRuleCall_3_1_0()); 
	    }
		lv_register_8_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPush_pop_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_8_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='+' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPush_pop_instrAccess().getPlusSignKeyword_3_2_0());
    }

    |(	otherlv_10='-' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPush_pop_instrAccess().getHyphenMinusKeyword_3_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPush_pop_instrAccess().getRegisterREGISTERParserRuleCall_3_2_1_1_0()); 
	    }
		lv_register_11_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPush_pop_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_11_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPush_pop_instrAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulebkpt_instr
entryRulebkpt_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBkpt_instrRule()); }
	 iv_rulebkpt_instr=rulebkpt_instr 
	 { $current=$iv_rulebkpt_instr.current; } 
	 EOF 
;

// Rule bkpt_instr
rulebkpt_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='bkpt' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBkpt_instrAccess().getBkptKeyword_0_0());
    }

    |	otherlv_1='BKPT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBkpt_instrAccess().getBKPTKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBkpt_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_0()); 
	    }
		lv_immediate_label_2_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBkpt_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_2_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleswp_instr
entryRuleswp_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwp_instrRule()); }
	 iv_ruleswp_instr=ruleswp_instr 
	 { $current=$iv_ruleswp_instr.current; } 
	 EOF 
;

// Rule swp_instr
ruleswp_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getSwp_instrAccess().getSWP_OPParserRuleCall_0_0()); 
    }
    this_SWP_OP_0=ruleSWP_OP
    { 
        $current = $this_SWP_OP_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSwp_instrAccess().getSWPB_OPParserRuleCall_0_1()); 
    }
    this_SWPB_OP_1=ruleSWPB_OP
    { 
        $current = $this_SWPB_OP_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSwp_instrAccess().getRegisterREGISTERParserRuleCall_1_0_0()); 
	    }
		lv_register_2_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwp_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_2_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwp_instrAccess().getCommaKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwp_instrAccess().getRegisterREGISTERParserRuleCall_1_2_0()); 
	    }
		lv_register_4_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwp_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_4_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSwp_instrAccess().getCommaKeyword_1_3());
    }
	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSwp_instrAccess().getLeftSquareBracketKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwp_instrAccess().getRegisterREGISTERParserRuleCall_1_5_0()); 
	    }
		lv_register_7_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwp_instrRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_7_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSwp_instrAccess().getCommaKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwp_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_6_1_0()); 
	    }
		lv_immediate_label_9_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwp_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_9_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSwp_instrAccess().getRightSquareBracketKeyword_1_7());
    }
))
;





// Entry rule entryRulesvc_instr
entryRulesvc_instr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSvc_instrRule()); }
	 iv_rulesvc_instr=rulesvc_instr 
	 { $current=$iv_rulesvc_instr.current; } 
	 EOF 
;

// Rule svc_instr
rulesvc_instr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSvc_instrAccess().getSVC_OPParserRuleCall_0()); 
    }
    this_SVC_OP_0=ruleSVC_OP
    { 
        $current = $this_SVC_OP_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSvc_instrAccess().getImmediate_labelImmediate_labelParserRuleCall_1_0()); 
	    }
		lv_immediate_label_1_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSvc_instrRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_1_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleADD_OP
entryRuleADD_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getADD_OPRule()); }
	 iv_ruleADD_OP=ruleADD_OP 
	 { $current=$iv_ruleADD_OP.current; } 
	 EOF 
;

// Rule ADD_OP
ruleADD_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'add' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getADD_OPAccess().getOpAddKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADD_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ADD' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getADD_OPAccess().getOpADDKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADD_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ADD_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getADD_OPAccess().getOpADD_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADD_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ADD_COM");
	    }

)

)
)
;





// Entry rule entryRuleADC_OP
entryRuleADC_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getADC_OPRule()); }
	 iv_ruleADC_OP=ruleADC_OP 
	 { $current=$iv_ruleADC_OP.current; } 
	 EOF 
;

// Rule ADC_OP
ruleADC_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'adc' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getADC_OPAccess().getOpAdcKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ADC' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getADC_OPAccess().getOpADCKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ADC_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getADC_OPAccess().getOpADC_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADC_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ADC_COM");
	    }

)

)
)
;





// Entry rule entryRuleADR_OP
entryRuleADR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getADR_OPRule()); }
	 iv_ruleADR_OP=ruleADR_OP 
	 { $current=$iv_ruleADR_OP.current; } 
	 EOF 
;

// Rule ADR_OP
ruleADR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'adr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getADR_OPAccess().getOpAdrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ADR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getADR_OPAccess().getOpADRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ADR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getADR_OPAccess().getOpADR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ADR_COM");
	    }

)

)
)
;





// Entry rule entryRuleSUB_OP
entryRuleSUB_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSUB_OPRule()); }
	 iv_ruleSUB_OP=ruleSUB_OP 
	 { $current=$iv_ruleSUB_OP.current; } 
	 EOF 
;

// Rule SUB_OP
ruleSUB_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'sub' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSUB_OPAccess().getOpSubKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSUB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SUB' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSUB_OPAccess().getOpSUBKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSUB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SUB_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSUB_OPAccess().getOpSUB_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSUB_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SUB_COM");
	    }

)

)
)
;





// Entry rule entryRuleSBC_OP
entryRuleSBC_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSBC_OPRule()); }
	 iv_ruleSBC_OP=ruleSBC_OP 
	 { $current=$iv_ruleSBC_OP.current; } 
	 EOF 
;

// Rule SBC_OP
ruleSBC_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'sbc' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSBC_OPAccess().getOpSbcKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSBC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SBC' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSBC_OPAccess().getOpSBCKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSBC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SBC_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSBC_OPAccess().getOpSBC_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSBC_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SBC_COM");
	    }

)

)
)
;





// Entry rule entryRuleRSB_OP
entryRuleRSB_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRSB_OPRule()); }
	 iv_ruleRSB_OP=ruleRSB_OP 
	 { $current=$iv_ruleRSB_OP.current; } 
	 EOF 
;

// Rule RSB_OP
ruleRSB_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'rsb' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getRSB_OPAccess().getOpRsbKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'RSB' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getRSB_OPAccess().getOpRSBKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_RSB_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getRSB_OPAccess().getOpRSB_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSB_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"RSB_COM");
	    }

)

)
)
;





// Entry rule entryRuleRSC_OP
entryRuleRSC_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRSC_OPRule()); }
	 iv_ruleRSC_OP=ruleRSC_OP 
	 { $current=$iv_ruleRSC_OP.current; } 
	 EOF 
;

// Rule RSC_OP
ruleRSC_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'rsc' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getRSC_OPAccess().getOpRscKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'RSC' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getRSC_OPAccess().getOpRSCKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_RSC_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getRSC_OPAccess().getOpRSC_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSC_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"RSC_COM");
	    }

)

)
)
;





// Entry rule entryRuleADRL_OP
entryRuleADRL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getADRL_OPRule()); }
	 iv_ruleADRL_OP=ruleADRL_OP 
	 { $current=$iv_ruleADRL_OP.current; } 
	 EOF 
;

// Rule ADRL_OP
ruleADRL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'adrl' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getADRL_OPAccess().getOpAdrlKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADRL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ADRL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getADRL_OPAccess().getOpADRLKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADRL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ADRL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getADRL_OPAccess().getOpADRL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getADRL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ADRL_COM");
	    }

)

)
)
;





// Entry rule entryRuleMUL_OP
entryRuleMUL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMUL_OPRule()); }
	 iv_ruleMUL_OP=ruleMUL_OP 
	 { $current=$iv_ruleMUL_OP.current; } 
	 EOF 
;

// Rule MUL_OP
ruleMUL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mul' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMUL_OPAccess().getOpMulKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMUL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MUL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMUL_OPAccess().getOpMULKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMUL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MUL_3R_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMUL_OPAccess().getOpMUL_3R_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMUL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MUL_3R_COM");
	    }

)

)
)
;





// Entry rule entryRuleMLS_OP
entryRuleMLS_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMLS_OPRule()); }
	 iv_ruleMLS_OP=ruleMLS_OP 
	 { $current=$iv_ruleMLS_OP.current; } 
	 EOF 
;

// Rule MLS_OP
ruleMLS_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mls' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMLS_OPAccess().getOpMlsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLS_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MLS' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMLS_OPAccess().getOpMLSKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLS_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MUL_4R_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMLS_OPAccess().getOpMUL_4R_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLS_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MUL_4R_COM");
	    }

)

)
)
;





// Entry rule entryRuleMLA_OP
entryRuleMLA_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMLA_OPRule()); }
	 iv_ruleMLA_OP=ruleMLA_OP 
	 { $current=$iv_ruleMLA_OP.current; } 
	 EOF 
;

// Rule MLA_OP
ruleMLA_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mla' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMLA_OPAccess().getOpMlaKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLA_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MLA' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMLA_OPAccess().getOpMLAKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLA_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MLA_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMLA_OPAccess().getOpMLA_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMLA_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MLA_COM");
	    }

)

)
)
;





// Entry rule entryRuleUMULL_OP
entryRuleUMULL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUMULL_OPRule()); }
	 iv_ruleUMULL_OP=ruleUMULL_OP 
	 { $current=$iv_ruleUMULL_OP.current; } 
	 EOF 
;

// Rule UMULL_OP
ruleUMULL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'umull' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getUMULL_OPAccess().getOpUmullKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMULL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'UMULL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getUMULL_OPAccess().getOpUMULLKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMULL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_UMULL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getUMULL_OPAccess().getOpUMULL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMULL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"UMULL_COM");
	    }

)

)
)
;





// Entry rule entryRuleUMLAL_OP
entryRuleUMLAL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUMLAL_OPRule()); }
	 iv_ruleUMLAL_OP=ruleUMLAL_OP 
	 { $current=$iv_ruleUMLAL_OP.current; } 
	 EOF 
;

// Rule UMLAL_OP
ruleUMLAL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'umlal' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getUMLAL_OPAccess().getOpUmlalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMLAL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'UMLAL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getUMLAL_OPAccess().getOpUMLALKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMLAL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_UMLAL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getUMLAL_OPAccess().getOpUMLAL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUMLAL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"UMLAL_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMULL_OP
entryRuleSMULL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMULL_OPRule()); }
	 iv_ruleSMULL_OP=ruleSMULL_OP 
	 { $current=$iv_ruleSMULL_OP.current; } 
	 EOF 
;

// Rule SMULL_OP
ruleSMULL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smull' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMULL_OPAccess().getOpSmullKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMULL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMULL_OPAccess().getOpSMULLKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMULL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMULL_OPAccess().getOpSMULL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMULL_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMLAL_OP
entryRuleSMLAL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMLAL_OPRule()); }
	 iv_ruleSMLAL_OP=ruleSMLAL_OP 
	 { $current=$iv_ruleSMLAL_OP.current; } 
	 EOF 
;

// Rule SMLAL_OP
ruleSMLAL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smlal' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMLAL_OPAccess().getOpSmlalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMLAL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMLAL_OPAccess().getOpSMLALKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMLAL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMLAL_OPAccess().getOpSMLAL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMLAL_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMUL_OP
entryRuleSMUL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMUL_OPRule()); }
	 iv_ruleSMUL_OP=ruleSMUL_OP 
	 { $current=$iv_ruleSMUL_OP.current; } 
	 EOF 
;

// Rule SMUL_OP
ruleSMUL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smul' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMUL_OPAccess().getOpSmulKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMUL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMUL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMUL_OPAccess().getOpSMULKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMUL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMUL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMUL_OPAccess().getOpSMUL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMUL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMUL_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMULW_OP
entryRuleSMULW_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMULW_OPRule()); }
	 iv_ruleSMULW_OP=ruleSMULW_OP 
	 { $current=$iv_ruleSMULW_OP.current; } 
	 EOF 
;

// Rule SMULW_OP
ruleSMULW_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smulw' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMULW_OPAccess().getOpSmulwKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULW_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMULW' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMULW_OPAccess().getOpSMULWKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULW_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMULW_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMULW_OPAccess().getOpSMULW_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMULW_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMULW_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMLA_OP
entryRuleSMLA_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMLA_OPRule()); }
	 iv_ruleSMLA_OP=ruleSMLA_OP 
	 { $current=$iv_ruleSMLA_OP.current; } 
	 EOF 
;

// Rule SMLA_OP
ruleSMLA_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smla' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMLA_OPAccess().getOpSmlaKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLA_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMLA' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMLA_OPAccess().getOpSMLAKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLA_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMLA_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMLA_OPAccess().getOpSMLA_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLA_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMLA_COM");
	    }

)

)
)
;





// Entry rule entryRuleSMLAW_OP
entryRuleSMLAW_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMLAW_OPRule()); }
	 iv_ruleSMLAW_OP=ruleSMLAW_OP 
	 { $current=$iv_ruleSMLAW_OP.current; } 
	 EOF 
;

// Rule SMLAW_OP
ruleSMLAW_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'smlaw' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSMLAW_OPAccess().getOpSmlawKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAW_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SMLAW' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSMLAW_OPAccess().getOpSMLAWKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAW_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SMLAW_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSMLAW_OPAccess().getOpSMLAW_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSMLAW_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SMLAW_COM");
	    }

)

)
)
;





// Entry rule entryRuleMOV_OP
entryRuleMOV_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMOV_OPRule()); }
	 iv_ruleMOV_OP=ruleMOV_OP 
	 { $current=$iv_ruleMOV_OP.current; } 
	 EOF 
;

// Rule MOV_OP
ruleMOV_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mov' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMOV_OPAccess().getOpMovKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMOV_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MOV' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMOV_OPAccess().getOpMOVKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMOV_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MOV_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMOV_OPAccess().getOpMOV_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMOV_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MOV_COM");
	    }

)

)
)
;





// Entry rule entryRuleMVN_OP
entryRuleMVN_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMVN_OPRule()); }
	 iv_ruleMVN_OP=ruleMVN_OP 
	 { $current=$iv_ruleMVN_OP.current; } 
	 EOF 
;

// Rule MVN_OP
ruleMVN_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mvn' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMVN_OPAccess().getOpMvnKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MVN' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMVN_OPAccess().getOpMVNKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MVN_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMVN_OPAccess().getOpMVN_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVN_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MVN_COM");
	    }

)

)
)
;





// Entry rule entryRuleASR_OP
entryRuleASR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getASR_OPRule()); }
	 iv_ruleASR_OP=ruleASR_OP 
	 { $current=$iv_ruleASR_OP.current; } 
	 EOF 
;

// Rule ASR_OP
ruleASR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'asr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getASR_OPAccess().getOpAsrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getASR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ASR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getASR_OPAccess().getOpASRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getASR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ASR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getASR_OPAccess().getOpASR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getASR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ASR_COM");
	    }

)

)
)
;





// Entry rule entryRuleLSL_OP
entryRuleLSL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLSL_OPRule()); }
	 iv_ruleLSL_OP=ruleLSL_OP 
	 { $current=$iv_ruleLSL_OP.current; } 
	 EOF 
;

// Rule LSL_OP
ruleLSL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'lsl' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getLSL_OPAccess().getOpLslKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'LSL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getLSL_OPAccess().getOpLSLKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_LSL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getLSL_OPAccess().getOpLSL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"LSL_COM");
	    }

)

)
)
;





// Entry rule entryRuleLSR_OP
entryRuleLSR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLSR_OPRule()); }
	 iv_ruleLSR_OP=ruleLSR_OP 
	 { $current=$iv_ruleLSR_OP.current; } 
	 EOF 
;

// Rule LSR_OP
ruleLSR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'lsr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getLSR_OPAccess().getOpLsrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'LSR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getLSR_OPAccess().getOpLSRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_LSR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getLSR_OPAccess().getOpLSR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLSR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"LSR_COM");
	    }

)

)
)
;





// Entry rule entryRuleROR_OP
entryRuleROR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getROR_OPRule()); }
	 iv_ruleROR_OP=ruleROR_OP 
	 { $current=$iv_ruleROR_OP.current; } 
	 EOF 
;

// Rule ROR_OP
ruleROR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'ror' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getROR_OPAccess().getOpRorKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getROR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ROR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getROR_OPAccess().getOpRORKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getROR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ROR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getROR_OPAccess().getOpROR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getROR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ROR_COM");
	    }

)

)
)
;





// Entry rule entryRuleRRX_OP
entryRuleRRX_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRRX_OPRule()); }
	 iv_ruleRRX_OP=ruleRRX_OP 
	 { $current=$iv_ruleRRX_OP.current; } 
	 EOF 
;

// Rule RRX_OP
ruleRRX_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'rrx' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getRRX_OPAccess().getOpRrxKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRRX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'RRX' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getRRX_OPAccess().getOpRRXKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRRX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_RRX_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getRRX_OPAccess().getOpRRX_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRRX_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"RRX_COM");
	    }

)

)
)
;





// Entry rule entryRuleCLZ_OP
entryRuleCLZ_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCLZ_OPRule()); }
	 iv_ruleCLZ_OP=ruleCLZ_OP 
	 { $current=$iv_ruleCLZ_OP.current; } 
	 EOF 
;

// Rule CLZ_OP
ruleCLZ_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'clz' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getCLZ_OPAccess().getOpClzKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLZ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'CLZ' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getCLZ_OPAccess().getOpCLZKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLZ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_CLZ_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getCLZ_OPAccess().getOpCLZ_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLZ_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"CLZ_COM");
	    }

)

)
)
;





// Entry rule entryRuleCMP_OP
entryRuleCMP_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCMP_OPRule()); }
	 iv_ruleCMP_OP=ruleCMP_OP 
	 { $current=$iv_ruleCMP_OP.current; } 
	 EOF 
;

// Rule CMP_OP
ruleCMP_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'cmp' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getCMP_OPAccess().getOpCmpKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'CMP' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getCMP_OPAccess().getOpCMPKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_CMP_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getCMP_OPAccess().getOpCMP_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMP_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"CMP_COM");
	    }

)

)
)
;





// Entry rule entryRuleCMN_OP
entryRuleCMN_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCMN_OPRule()); }
	 iv_ruleCMN_OP=ruleCMN_OP 
	 { $current=$iv_ruleCMN_OP.current; } 
	 EOF 
;

// Rule CMN_OP
ruleCMN_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'cmn' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getCMN_OPAccess().getOpCmnKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'CMN' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getCMN_OPAccess().getOpCMNKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_CMN_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getCMN_OPAccess().getOpCMN_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCMN_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"CMN_COM");
	    }

)

)
)
;





// Entry rule entryRuleTST_OP
entryRuleTST_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTST_OPRule()); }
	 iv_ruleTST_OP=ruleTST_OP 
	 { $current=$iv_ruleTST_OP.current; } 
	 EOF 
;

// Rule TST_OP
ruleTST_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'tst' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getTST_OPAccess().getOpTstKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTST_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'TST' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getTST_OPAccess().getOpTSTKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTST_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_TST_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getTST_OPAccess().getOpTST_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTST_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"TST_COM");
	    }

)

)
)
;





// Entry rule entryRuleTEQ_OP
entryRuleTEQ_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTEQ_OPRule()); }
	 iv_ruleTEQ_OP=ruleTEQ_OP 
	 { $current=$iv_ruleTEQ_OP.current; } 
	 EOF 
;

// Rule TEQ_OP
ruleTEQ_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'teq' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getTEQ_OPAccess().getOpTeqKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTEQ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'TEQ' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getTEQ_OPAccess().getOpTEQKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTEQ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_TEQ_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getTEQ_OPAccess().getOpTEQ_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTEQ_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"TEQ_COM");
	    }

)

)
)
;





// Entry rule entryRuleAND_OP
entryRuleAND_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAND_OPRule()); }
	 iv_ruleAND_OP=ruleAND_OP 
	 { $current=$iv_ruleAND_OP.current; } 
	 EOF 
;

// Rule AND_OP
ruleAND_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'and' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getAND_OPAccess().getOpAndKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAND_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'AND' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getAND_OPAccess().getOpANDKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAND_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_AND_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getAND_OPAccess().getOpAND_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAND_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"AND_COM");
	    }

)

)
)
;





// Entry rule entryRuleEOR_OP
entryRuleEOR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEOR_OPRule()); }
	 iv_ruleEOR_OP=ruleEOR_OP 
	 { $current=$iv_ruleEOR_OP.current; } 
	 EOF 
;

// Rule EOR_OP
ruleEOR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'eor' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getEOR_OPAccess().getOpEorKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEOR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'EOR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getEOR_OPAccess().getOpEORKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEOR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_EOR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getEOR_OPAccess().getOpEOR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEOR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"EOR_COM");
	    }

)

)
)
;





// Entry rule entryRuleORR_OP
entryRuleORR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getORR_OPRule()); }
	 iv_ruleORR_OP=ruleORR_OP 
	 { $current=$iv_ruleORR_OP.current; } 
	 EOF 
;

// Rule ORR_OP
ruleORR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'orr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getORR_OPAccess().getOpOrrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ORR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getORR_OPAccess().getOpORRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ORR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getORR_OPAccess().getOpORR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ORR_COM");
	    }

)

)
)
;





// Entry rule entryRuleORN_OP
entryRuleORN_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getORN_OPRule()); }
	 iv_ruleORN_OP=ruleORN_OP 
	 { $current=$iv_ruleORN_OP.current; } 
	 EOF 
;

// Rule ORN_OP
ruleORN_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'orn' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getORN_OPAccess().getOpOrnKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'ORN' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getORN_OPAccess().getOpORNKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORN_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_ORN_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getORN_OPAccess().getOpORN_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getORN_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"ORN_COM");
	    }

)

)
)
;





// Entry rule entryRuleBIC_OP
entryRuleBIC_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBIC_OPRule()); }
	 iv_ruleBIC_OP=ruleBIC_OP 
	 { $current=$iv_ruleBIC_OP.current; } 
	 EOF 
;

// Rule BIC_OP
ruleBIC_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'bic' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getBIC_OPAccess().getOpBicKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBIC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'BIC' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getBIC_OPAccess().getOpBICKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBIC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_BIC_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getBIC_OPAccess().getOpBIC_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBIC_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"BIC_COM");
	    }

)

)
)
;





// Entry rule entryRuleB_OP
entryRuleB_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getB_OPRule()); }
	 iv_ruleB_OP=ruleB_OP 
	 { $current=$iv_ruleB_OP.current; } 
	 EOF 
;

// Rule B_OP
ruleB_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'b' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getB_OPAccess().getOpBKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'B' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getB_OPAccess().getOpBKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_B_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getB_OPAccess().getOpB_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getB_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"B_COM");
	    }

)

)
)
;





// Entry rule entryRuleBL_OP
entryRuleBL_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBL_OPRule()); }
	 iv_ruleBL_OP=ruleBL_OP 
	 { $current=$iv_ruleBL_OP.current; } 
	 EOF 
;

// Rule BL_OP
ruleBL_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'bl' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getBL_OPAccess().getOpBlKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'BL' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getBL_OPAccess().getOpBLKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBL_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_BL_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getBL_OPAccess().getOpBL_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBL_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"BL_COM");
	    }

)

)
)
;





// Entry rule entryRuleBX_OP
entryRuleBX_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBX_OPRule()); }
	 iv_ruleBX_OP=ruleBX_OP 
	 { $current=$iv_ruleBX_OP.current; } 
	 EOF 
;

// Rule BX_OP
ruleBX_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'bx' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getBX_OPAccess().getOpBxKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'BX' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getBX_OPAccess().getOpBXKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_BX_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getBX_OPAccess().getOpBX_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBX_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"BX_COM");
	    }

)

)
)
;





// Entry rule entryRuleBLX_OP
entryRuleBLX_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBLX_OPRule()); }
	 iv_ruleBLX_OP=ruleBLX_OP 
	 { $current=$iv_ruleBLX_OP.current; } 
	 EOF 
;

// Rule BLX_OP
ruleBLX_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'blx' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getBLX_OPAccess().getOpBlxKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBLX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'BLX' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getBLX_OPAccess().getOpBLXKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBLX_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_BLX_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getBLX_OPAccess().getOpBLX_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBLX_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"BLX_COM");
	    }

)

)
)
;





// Entry rule entryRuleBXJ_OP
entryRuleBXJ_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBXJ_OPRule()); }
	 iv_ruleBXJ_OP=ruleBXJ_OP 
	 { $current=$iv_ruleBXJ_OP.current; } 
	 EOF 
;

// Rule BXJ_OP
ruleBXJ_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'bxj' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getBXJ_OPAccess().getOpBxjKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBXJ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'BXJ' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getBXJ_OPAccess().getOpBXJKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBXJ_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_BXJ_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getBXJ_OPAccess().getOpBXJ_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBXJ_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"BXJ_COM");
	    }

)

)
)
;





// Entry rule entryRuleMRS_OP
entryRuleMRS_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMRS_OPRule()); }
	 iv_ruleMRS_OP=ruleMRS_OP 
	 { $current=$iv_ruleMRS_OP.current; } 
	 EOF 
;

// Rule MRS_OP
ruleMRS_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'mrs' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMRS_OPAccess().getOpMrsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMRS_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MRS' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMRS_OPAccess().getOpMRSKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMRS_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MRS_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMRS_OPAccess().getOpMRS_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMRS_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MRS_COM");
	    }

)

)
)
;





// Entry rule entryRuleMSR_OP
entryRuleMSR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSR_OPRule()); }
	 iv_ruleMSR_OP=ruleMSR_OP 
	 { $current=$iv_ruleMSR_OP.current; } 
	 EOF 
;

// Rule MSR_OP
ruleMSR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'msr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getMSR_OPAccess().getOpMsrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMSR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'MSR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getMSR_OPAccess().getOpMSRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMSR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_MSR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getMSR_OPAccess().getOpMSR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMSR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"MSR_COM");
	    }

)

)
)
;





// Entry rule entryRuleLDR_OP
entryRuleLDR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLDR_OPRule()); }
	 iv_ruleLDR_OP=ruleLDR_OP 
	 { $current=$iv_ruleLDR_OP.current; } 
	 EOF 
;

// Rule LDR_OP
ruleLDR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'ldr' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getLDR_OPAccess().getOpLdrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'LDR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getLDR_OPAccess().getOpLDRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_LDR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getLDR_OPAccess().getOpLDR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"LDR_COM");
	    }

)

)
)
;





// Entry rule entryRuleSTR_OP
entryRuleSTR_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSTR_OPRule()); }
	 iv_ruleSTR_OP=ruleSTR_OP 
	 { $current=$iv_ruleSTR_OP.current; } 
	 EOF 
;

// Rule STR_OP
ruleSTR_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'str' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSTR_OPAccess().getOpStrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'STR' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSTR_OPAccess().getOpSTRKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTR_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_STR_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSTR_OPAccess().getOpSTR_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTR_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"STR_COM");
	    }

)

)
)
;





// Entry rule entryRuleLDM_OP
entryRuleLDM_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLDM_OPRule()); }
	 iv_ruleLDM_OP=ruleLDM_OP 
	 { $current=$iv_ruleLDM_OP.current; } 
	 EOF 
;

// Rule LDM_OP
ruleLDM_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'ldm' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getLDM_OPAccess().getOpLdmKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDM_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'LDM' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getLDM_OPAccess().getOpLDMKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDM_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_LDM_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getLDM_OPAccess().getOpLDM_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLDM_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"LDM_COM");
	    }

)

)
)
;





// Entry rule entryRuleSTM_OP
entryRuleSTM_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSTM_OPRule()); }
	 iv_ruleSTM_OP=ruleSTM_OP 
	 { $current=$iv_ruleSTM_OP.current; } 
	 EOF 
;

// Rule STM_OP
ruleSTM_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'stm' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSTM_OPAccess().getOpStmKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTM_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'STM' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSTM_OPAccess().getOpSTMKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTM_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_STM_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSTM_OPAccess().getOpSTM_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSTM_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"STM_COM");
	    }

)

)
)
;





// Entry rule entryRulePUSH_OP
entryRulePUSH_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPUSH_OPRule()); }
	 iv_rulePUSH_OP=rulePUSH_OP 
	 { $current=$iv_rulePUSH_OP.current; } 
	 EOF 
;

// Rule PUSH_OP
rulePUSH_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'push' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getPUSH_OPAccess().getOpPushKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPUSH_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'PUSH' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getPUSH_OPAccess().getOpPUSHKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPUSH_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_PUSH_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getPUSH_OPAccess().getOpPUSH_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPUSH_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"PUSH_COM");
	    }

)

)
)
;





// Entry rule entryRulePOP_OP
entryRulePOP_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOP_OPRule()); }
	 iv_rulePOP_OP=rulePOP_OP 
	 { $current=$iv_rulePOP_OP.current; } 
	 EOF 
;

// Rule POP_OP
rulePOP_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'pop' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getPOP_OPAccess().getOpPopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'POP' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getPOP_OPAccess().getOpPOPKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_POP_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getPOP_OPAccess().getOpPOP_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOP_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"POP_COM");
	    }

)

)
)
;





// Entry rule entryRuleSWP_OP
entryRuleSWP_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSWP_OPRule()); }
	 iv_ruleSWP_OP=ruleSWP_OP 
	 { $current=$iv_ruleSWP_OP.current; } 
	 EOF 
;

// Rule SWP_OP
ruleSWP_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'swp' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSWP_OPAccess().getOpSwpKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SWP' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSWP_OPAccess().getOpSWPKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWP_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SWP_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSWP_OPAccess().getOpSWP_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWP_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SWP_COM");
	    }

)

)
)
;





// Entry rule entryRuleSWPB_OP
entryRuleSWPB_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSWPB_OPRule()); }
	 iv_ruleSWPB_OP=ruleSWPB_OP 
	 { $current=$iv_ruleSWPB_OP.current; } 
	 EOF 
;

// Rule SWPB_OP
ruleSWPB_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'swpb' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSWPB_OPAccess().getOpSwpbKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWPB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SWPB' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSWPB_OPAccess().getOpSWPBKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWPB_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SWPB_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSWPB_OPAccess().getOpSWPB_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSWPB_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SWPB_COM");
	    }

)

)
)
;





// Entry rule entryRuleSVC_OP
entryRuleSVC_OP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSVC_OPRule()); }
	 iv_ruleSVC_OP=ruleSVC_OP 
	 { $current=$iv_ruleSVC_OP.current; } 
	 EOF 
;

// Rule SVC_OP
ruleSVC_OP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'svc' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getSVC_OPAccess().getOpSvcKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'SVC' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getSVC_OPAccess().getOpSVCKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVC_OPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_3=RULE_SVC_COM
		{
			newLeafNode(lv_op_0_3, grammarAccess.getSVC_OPAccess().getOpSVC_COMTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVC_OPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		true, 
        		"SVC_COM");
	    }

)

)
)
;





// Entry rule entryRulePSR_FIELD_E
entryRulePSR_FIELD_E returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPSR_FIELD_ERule()); }
	 iv_rulePSR_FIELD_E=rulePSR_FIELD_E 
	 { $current=$iv_rulePSR_FIELD_E.current; } 
	 EOF 
;

// Rule PSR_FIELD_E
rulePSR_FIELD_E returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_op_0_0=RULE_PSR_FIELD
		{
			newLeafNode(lv_op_0_0, grammarAccess.getPSR_FIELD_EAccess().getOpPSR_FIELDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSR_FIELD_ERule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"PSR_FIELD");
	    }

)
)
;





// Entry rule entryRuleAPSR_FLAG_E
entryRuleAPSR_FLAG_E returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAPSR_FLAG_ERule()); }
	 iv_ruleAPSR_FLAG_E=ruleAPSR_FLAG_E 
	 { $current=$iv_ruleAPSR_FLAG_E.current; } 
	 EOF 
;

// Rule APSR_FLAG_E
ruleAPSR_FLAG_E returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_op_0_0=RULE_APSR_FLAG
		{
			newLeafNode(lv_op_0_0, grammarAccess.getAPSR_FLAG_EAccess().getOpAPSR_FLAGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAPSR_FLAG_ERule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"APSR_FLAG");
	    }

)
)
;





// Entry rule entryRuleNOP
entryRuleNOP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNOPRule()); }
	 iv_ruleNOP=ruleNOP 
	 { $current=$iv_ruleNOP.current; } 
	 EOF 
;

// Rule NOP
ruleNOP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_op_0_1=	'nop' 
    {
        newLeafNode(lv_op_0_1, grammarAccess.getNOPAccess().getOpNopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNOPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

    |		lv_op_0_2=	'NOP' 
    {
        newLeafNode(lv_op_0_2, grammarAccess.getNOPAccess().getOpNOPKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNOPRule());
	        }
       		setWithLastConsumed($current, "op", true, null);
	    }

)

)
)
;





// Entry rule entryRulePREPROCESSOR
entryRulePREPROCESSOR returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPREPROCESSORRule()); }
	 iv_rulePREPROCESSOR=rulePREPROCESSOR 
	 { $current=$iv_rulePREPROCESSOR.current; } 
	 EOF 
;

// Rule PREPROCESSOR
rulePREPROCESSOR returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hash_0_0=	'#' 
    {
        newLeafNode(lv_hash_0_0, grammarAccess.getPREPROCESSORAccess().getHashNumberSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "hash", true, "#");
	    }

)
)(
(
(
		lv_code_1_1=	'if' 
    {
        newLeafNode(lv_code_1_1, grammarAccess.getPREPROCESSORAccess().getCodeIfKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_2=	'elif' 
    {
        newLeafNode(lv_code_1_2, grammarAccess.getPREPROCESSORAccess().getCodeElifKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_3=	'error' 
    {
        newLeafNode(lv_code_1_3, grammarAccess.getPREPROCESSORAccess().getCodeErrorKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_4=	'pragma' 
    {
        newLeafNode(lv_code_1_4, grammarAccess.getPREPROCESSORAccess().getCodePragmaKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_5=	'undef' 
    {
        newLeafNode(lv_code_1_5, grammarAccess.getPREPROCESSORAccess().getCodeUndefKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_6=	'include' 
    {
        newLeafNode(lv_code_1_6, grammarAccess.getPREPROCESSORAccess().getCodeIncludeKeyword_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_7=	'ifdef' 
    {
        newLeafNode(lv_code_1_7, grammarAccess.getPREPROCESSORAccess().getCodeIfdefKeyword_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_8=	'ifndef' 
    {
        newLeafNode(lv_code_1_8, grammarAccess.getPREPROCESSORAccess().getCodeIfndefKeyword_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_9=	'line' 
    {
        newLeafNode(lv_code_1_9, grammarAccess.getPREPROCESSORAccess().getCodeLineKeyword_1_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSORRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

)

)
))
;





// Entry rule entryRulePREPROCESSOR_DEFINE
entryRulePREPROCESSOR_DEFINE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPREPROCESSOR_DEFINERule()); }
	 iv_rulePREPROCESSOR_DEFINE=rulePREPROCESSOR_DEFINE 
	 { $current=$iv_rulePREPROCESSOR_DEFINE.current; } 
	 EOF 
;

// Rule PREPROCESSOR_DEFINE
rulePREPROCESSOR_DEFINE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hash_0_0=	'#' 
    {
        newLeafNode(lv_hash_0_0, grammarAccess.getPREPROCESSOR_DEFINEAccess().getHashNumberSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_DEFINERule());
	        }
       		setWithLastConsumed($current, "hash", true, "#");
	    }

)
)(
(
		lv_code_1_0=	'define' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getPREPROCESSOR_DEFINEAccess().getCodeDefineKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_DEFINERule());
	        }
       		setWithLastConsumed($current, "code", true, "define");
	    }

)
))
;





// Entry rule entryRulePREPROCESSOR_ENDIF
entryRulePREPROCESSOR_ENDIF returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPREPROCESSOR_ENDIFRule()); }
	 iv_rulePREPROCESSOR_ENDIF=rulePREPROCESSOR_ENDIF 
	 { $current=$iv_rulePREPROCESSOR_ENDIF.current; } 
	 EOF 
;

// Rule PREPROCESSOR_ENDIF
rulePREPROCESSOR_ENDIF returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hash_0_0=	'#' 
    {
        newLeafNode(lv_hash_0_0, grammarAccess.getPREPROCESSOR_ENDIFAccess().getHashNumberSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_ENDIFRule());
	        }
       		setWithLastConsumed($current, "hash", true, "#");
	    }

)
)(
(
		lv_code_1_0=	'endif' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getPREPROCESSOR_ENDIFAccess().getCodeEndifKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_ENDIFRule());
	        }
       		setWithLastConsumed($current, "code", true, "endif");
	    }

)
))
;





// Entry rule entryRulePREPROCESSOR_ELSE
entryRulePREPROCESSOR_ELSE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPREPROCESSOR_ELSERule()); }
	 iv_rulePREPROCESSOR_ELSE=rulePREPROCESSOR_ELSE 
	 { $current=$iv_rulePREPROCESSOR_ELSE.current; } 
	 EOF 
;

// Rule PREPROCESSOR_ELSE
rulePREPROCESSOR_ELSE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hash_0_0=	'#' 
    {
        newLeafNode(lv_hash_0_0, grammarAccess.getPREPROCESSOR_ELSEAccess().getHashNumberSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_ELSERule());
	        }
       		setWithLastConsumed($current, "hash", true, "#");
	    }

)
)(
(
		lv_code_1_0=	'else' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getPREPROCESSOR_ELSEAccess().getCodeElseKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPREPROCESSOR_ELSERule());
	        }
       		setWithLastConsumed($current, "code", true, "else");
	    }

)
))
;





// Entry rule entryRuleCExtendCode
entryRuleCExtendCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCExtendCodeRule()); }
	 iv_ruleCExtendCode=ruleCExtendCode 
	 { $current=$iv_ruleCExtendCode.current; } 
	 EOF 
;

// Rule CExtendCode
ruleCExtendCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getCExtendCodeAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
(
		lv_code_1_1=	'extern' 
    {
        newLeafNode(lv_code_1_1, grammarAccess.getCExtendCodeAccess().getCodeExternKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_2=	'data' 
    {
        newLeafNode(lv_code_1_2, grammarAccess.getCExtendCodeAccess().getCodeDataKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_3=	'text' 
    {
        newLeafNode(lv_code_1_3, grammarAccess.getCExtendCodeAccess().getCodeTextKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_4=	'global' 
    {
        newLeafNode(lv_code_1_4, grammarAccess.getCExtendCodeAccess().getCodeGlobalKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_5=	'end' 
    {
        newLeafNode(lv_code_1_5, grammarAccess.getCExtendCodeAccess().getCodeEndKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendCodeRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

)

)
))
;





// Entry rule entryRuleAssembler_Directives_equ
entryRuleAssembler_Directives_equ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssembler_Directives_equRule()); }
	 iv_ruleAssembler_Directives_equ=ruleAssembler_Directives_equ 
	 { $current=$iv_ruleAssembler_Directives_equ.current; } 
	 EOF 
;

// Rule Assembler_Directives_equ
ruleAssembler_Directives_equ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getAssembler_Directives_equAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_equRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'equ' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getAssembler_Directives_equAccess().getCodeEquKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_equRule());
	        }
       		setWithLastConsumed($current, "code", true, "equ");
	    }

)
))
;





// Entry rule entryRuleAssembler_Directives
entryRuleAssembler_Directives returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssembler_DirectivesRule()); }
	 iv_ruleAssembler_Directives=ruleAssembler_Directives 
	 { $current=$iv_ruleAssembler_Directives.current; } 
	 EOF 
;

// Rule Assembler_Directives
ruleAssembler_Directives returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getAssembler_DirectivesAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_DirectivesRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
(
		lv_code_1_1=	'long' 
    {
        newLeafNode(lv_code_1_1, grammarAccess.getAssembler_DirectivesAccess().getCodeLongKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_2=	'word' 
    {
        newLeafNode(lv_code_1_2, grammarAccess.getAssembler_DirectivesAccess().getCodeWordKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_3=	'ascii' 
    {
        newLeafNode(lv_code_1_3, grammarAccess.getAssembler_DirectivesAccess().getCodeAsciiKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

)

)
))
;





// Entry rule entryRuleAssembler_Directives_macro
entryRuleAssembler_Directives_macro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssembler_Directives_macroRule()); }
	 iv_ruleAssembler_Directives_macro=ruleAssembler_Directives_macro 
	 { $current=$iv_ruleAssembler_Directives_macro.current; } 
	 EOF 
;

// Rule Assembler_Directives_macro
ruleAssembler_Directives_macro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getAssembler_Directives_macroAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_macroRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'macro' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getAssembler_Directives_macroAccess().getCodeMacroKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_macroRule());
	        }
       		setWithLastConsumed($current, "code", true, "macro");
	    }

)
))
;





// Entry rule entryRuleAssember_Directives_type
entryRuleAssember_Directives_type returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssember_Directives_typeRule()); }
	 iv_ruleAssember_Directives_type=ruleAssember_Directives_type 
	 { $current=$iv_ruleAssember_Directives_type.current; } 
	 EOF 
;

// Rule Assember_Directives_type
ruleAssember_Directives_type returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getAssember_Directives_typeAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssember_Directives_typeRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'type' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getAssember_Directives_typeAccess().getCodeTypeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssember_Directives_typeRule());
	        }
       		setWithLastConsumed($current, "code", true, "type");
	    }

)
))
;





// Entry rule entryRuleAssembler_Directives_endm
entryRuleAssembler_Directives_endm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssembler_Directives_endmRule()); }
	 iv_ruleAssembler_Directives_endm=ruleAssembler_Directives_endm 
	 { $current=$iv_ruleAssembler_Directives_endm.current; } 
	 EOF 
;

// Rule Assembler_Directives_endm
ruleAssembler_Directives_endm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getAssembler_Directives_endmAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_endmRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'endm' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getAssembler_Directives_endmAccess().getCodeEndmKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssembler_Directives_endmRule());
	        }
       		setWithLastConsumed($current, "code", true, "endm");
	    }

)
))
;





// Entry rule entryRuleARM_Machine_Directives
entryRuleARM_Machine_Directives returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARM_Machine_DirectivesRule()); }
	 iv_ruleARM_Machine_Directives=ruleARM_Machine_Directives 
	 { $current=$iv_ruleARM_Machine_Directives.current; } 
	 EOF 
;

// Rule ARM_Machine_Directives
ruleARM_Machine_Directives returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getARM_Machine_DirectivesAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
(
		lv_code_1_1=	'2byte' 
    {
        newLeafNode(lv_code_1_1, grammarAccess.getARM_Machine_DirectivesAccess().getCode2byteKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_2=	'4byte' 
    {
        newLeafNode(lv_code_1_2, grammarAccess.getARM_Machine_DirectivesAccess().getCode4byteKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_3=	'8byte' 
    {
        newLeafNode(lv_code_1_3, grammarAccess.getARM_Machine_DirectivesAccess().getCode8byteKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_4=	'arch' 
    {
        newLeafNode(lv_code_1_4, grammarAccess.getARM_Machine_DirectivesAccess().getCodeArchKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_5=	'arch_extension' 
    {
        newLeafNode(lv_code_1_5, grammarAccess.getARM_Machine_DirectivesAccess().getCodeArch_extensionKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_6=	'arm' 
    {
        newLeafNode(lv_code_1_6, grammarAccess.getARM_Machine_DirectivesAccess().getCodeArmKeyword_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_7=	'bss' 
    {
        newLeafNode(lv_code_1_7, grammarAccess.getARM_Machine_DirectivesAccess().getCodeBssKeyword_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_8=	'cantunwind' 
    {
        newLeafNode(lv_code_1_8, grammarAccess.getARM_Machine_DirectivesAccess().getCodeCantunwindKeyword_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_9=	'cpu' 
    {
        newLeafNode(lv_code_1_9, grammarAccess.getARM_Machine_DirectivesAccess().getCodeCpuKeyword_1_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_10=	'even' 
    {
        newLeafNode(lv_code_1_10, grammarAccess.getARM_Machine_DirectivesAccess().getCodeEvenKeyword_1_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_11=	'extend' 
    {
        newLeafNode(lv_code_1_11, grammarAccess.getARM_Machine_DirectivesAccess().getCodeExtendKeyword_1_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_12=	'ldouble' 
    {
        newLeafNode(lv_code_1_12, grammarAccess.getARM_Machine_DirectivesAccess().getCodeLdoubleKeyword_1_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_13=	'fnend' 
    {
        newLeafNode(lv_code_1_13, grammarAccess.getARM_Machine_DirectivesAccess().getCodeFnendKeyword_1_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_14=	'fnstart' 
    {
        newLeafNode(lv_code_1_14, grammarAccess.getARM_Machine_DirectivesAccess().getCodeFnstartKeyword_1_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_15=	'force_thumb' 
    {
        newLeafNode(lv_code_1_15, grammarAccess.getARM_Machine_DirectivesAccess().getCodeForce_thumbKeyword_1_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_16=	'fpu' 
    {
        newLeafNode(lv_code_1_16, grammarAccess.getARM_Machine_DirectivesAccess().getCodeFpuKeyword_1_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_17=	'handlerdata' 
    {
        newLeafNode(lv_code_1_17, grammarAccess.getARM_Machine_DirectivesAccess().getCodeHandlerdataKeyword_1_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_18=	'ltorg' 
    {
        newLeafNode(lv_code_1_18, grammarAccess.getARM_Machine_DirectivesAccess().getCodeLtorgKeyword_1_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_19=	'movsp' 
    {
        newLeafNode(lv_code_1_19, grammarAccess.getARM_Machine_DirectivesAccess().getCodeMovspKeyword_1_0_18());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_20=	'object_arch' 
    {
        newLeafNode(lv_code_1_20, grammarAccess.getARM_Machine_DirectivesAccess().getCodeObject_archKeyword_1_0_19());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_21=	'packed' 
    {
        newLeafNode(lv_code_1_21, grammarAccess.getARM_Machine_DirectivesAccess().getCodePackedKeyword_1_0_20());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_22=	'personality' 
    {
        newLeafNode(lv_code_1_22, grammarAccess.getARM_Machine_DirectivesAccess().getCodePersonalityKeyword_1_0_21());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_23=	'personalityindex' 
    {
        newLeafNode(lv_code_1_23, grammarAccess.getARM_Machine_DirectivesAccess().getCodePersonalityindexKeyword_1_0_22());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_24=	'pool' 
    {
        newLeafNode(lv_code_1_24, grammarAccess.getARM_Machine_DirectivesAccess().getCodePoolKeyword_1_0_23());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_25=	'secrel32' 
    {
        newLeafNode(lv_code_1_25, grammarAccess.getARM_Machine_DirectivesAccess().getCodeSecrel32Keyword_1_0_24());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_26=	'thumb' 
    {
        newLeafNode(lv_code_1_26, grammarAccess.getARM_Machine_DirectivesAccess().getCodeThumbKeyword_1_0_25());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_27=	'thumb_func' 
    {
        newLeafNode(lv_code_1_27, grammarAccess.getARM_Machine_DirectivesAccess().getCodeThumb_funcKeyword_1_0_26());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_28=	'thumb_set' 
    {
        newLeafNode(lv_code_1_28, grammarAccess.getARM_Machine_DirectivesAccess().getCodeThumb_setKeyword_1_0_27());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_29=	'space' 
    {
        newLeafNode(lv_code_1_29, grammarAccess.getARM_Machine_DirectivesAccess().getCodeSpaceKeyword_1_0_28());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_1_30=	'byte' 
    {
        newLeafNode(lv_code_1_30, grammarAccess.getARM_Machine_DirectivesAccess().getCodeByteKeyword_1_0_29());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_DirectivesRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

)

)
))
;





// Entry rule entryRuleARM_MACHINE_DIRECTIVES_align
entryRuleARM_MACHINE_DIRECTIVES_align returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARM_MACHINE_DIRECTIVES_alignRule()); }
	 iv_ruleARM_MACHINE_DIRECTIVES_align=ruleARM_MACHINE_DIRECTIVES_align 
	 { $current=$iv_ruleARM_MACHINE_DIRECTIVES_align.current; } 
	 EOF 
;

// Rule ARM_MACHINE_DIRECTIVES_align
ruleARM_MACHINE_DIRECTIVES_align returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getARM_MACHINE_DIRECTIVES_alignAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_MACHINE_DIRECTIVES_alignRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'align' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getARM_MACHINE_DIRECTIVES_alignAccess().getCodeAlignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_MACHINE_DIRECTIVES_alignRule());
	        }
       		setWithLastConsumed($current, "code", true, "align");
	    }

)
))
;





// Entry rule entryRuleARM_Machine_Directives_code
entryRuleARM_Machine_Directives_code returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARM_Machine_Directives_codeRule()); }
	 iv_ruleARM_Machine_Directives_code=ruleARM_Machine_Directives_code 
	 { $current=$iv_ruleARM_Machine_Directives_code.current; } 
	 EOF 
;

// Rule ARM_Machine_Directives_code
ruleARM_Machine_Directives_code returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getARM_Machine_Directives_codeAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_codeRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'code' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getARM_Machine_Directives_codeAccess().getCodeCodeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_codeRule());
	        }
       		setWithLastConsumed($current, "code", true, "code");
	    }

)
))
;





// Entry rule entryRuleARM_Machine_Directives_syntax
entryRuleARM_Machine_Directives_syntax returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARM_Machine_Directives_syntaxRule()); }
	 iv_ruleARM_Machine_Directives_syntax=ruleARM_Machine_Directives_syntax 
	 { $current=$iv_ruleARM_Machine_Directives_syntax.current; } 
	 EOF 
;

// Rule ARM_Machine_Directives_syntax
ruleARM_Machine_Directives_syntax returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getARM_Machine_Directives_syntaxAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_syntaxRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'syntax' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getARM_Machine_Directives_syntaxAccess().getCodeSyntaxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_syntaxRule());
	        }
       		setWithLastConsumed($current, "code", true, "syntax");
	    }

)
))
;





// Entry rule entryRuleARM_Machine_Directives_save
entryRuleARM_Machine_Directives_save returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARM_Machine_Directives_saveRule()); }
	 iv_ruleARM_Machine_Directives_save=ruleARM_Machine_Directives_save 
	 { $current=$iv_ruleARM_Machine_Directives_save.current; } 
	 EOF 
;

// Rule ARM_Machine_Directives_save
ruleARM_Machine_Directives_save returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getARM_Machine_Directives_saveAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_saveRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'save' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getARM_Machine_Directives_saveAccess().getCodeSaveKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARM_Machine_Directives_saveRule());
	        }
       		setWithLastConsumed($current, "code", true, "save");
	    }

)
))
;





// Entry rule entryRuleCExtendasciz
entryRuleCExtendasciz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCExtendascizRule()); }
	 iv_ruleCExtendasciz=ruleCExtendasciz 
	 { $current=$iv_ruleCExtendasciz.current; } 
	 EOF 
;

// Rule CExtendasciz
ruleCExtendasciz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dot_0_0=	'.' 
    {
        newLeafNode(lv_dot_0_0, grammarAccess.getCExtendascizAccess().getDotFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendascizRule());
	        }
       		setWithLastConsumed($current, "dot", true, ".");
	    }

)
)(
(
		lv_code_1_0=	'asciz' 
    {
        newLeafNode(lv_code_1_0, grammarAccess.getCExtendascizAccess().getCodeAscizKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCExtendascizRule());
	        }
       		setWithLastConsumed($current, "code", true, "asciz");
	    }

)
))
;





// Entry rule entryRuleCLang
entryRuleCLang returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCLangRule()); }
	 iv_ruleCLang=ruleCLang 
	 { $current=$iv_ruleCLang.current; } 
	 EOF 
;

// Rule CLang
ruleCLang returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_code_0_1=	'title:' 
    {
        newLeafNode(lv_code_0_1, grammarAccess.getCLangAccess().getCodeTitleKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_2=	'prompt:' 
    {
        newLeafNode(lv_code_0_2, grammarAccess.getCLangAccess().getCodePromptKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_3=	'Content:' 
    {
        newLeafNode(lv_code_0_3, grammarAccess.getCLangAccess().getCodeContentKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_4=	'main1:' 
    {
        newLeafNode(lv_code_0_4, grammarAccess.getCLangAccess().getCodeMain1Keyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_5=	'break:' 
    {
        newLeafNode(lv_code_0_5, grammarAccess.getCLangAccess().getCodeBreakKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_6=	'loop:' 
    {
        newLeafNode(lv_code_0_6, grammarAccess.getCLangAccess().getCodeLoopKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_7=	'exit_main:' 
    {
        newLeafNode(lv_code_0_7, grammarAccess.getCLangAccess().getCodeExit_mainKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_8=	'start:' 
    {
        newLeafNode(lv_code_0_8, grammarAccess.getCLangAccess().getCodeStartKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_9=	'stop:' 
    {
        newLeafNode(lv_code_0_9, grammarAccess.getCLangAccess().getCodeStopKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_10=	'START:' 
    {
        newLeafNode(lv_code_0_10, grammarAccess.getCLangAccess().getCodeSTARTKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

    |		lv_code_0_11=	'STOP:' 
    {
        newLeafNode(lv_code_0_11, grammarAccess.getCLangAccess().getCodeSTOPKeyword_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCLangRule());
	        }
       		setWithLastConsumed($current, "code", true, null);
	    }

)

)
)
;





// Entry rule entryRuleREGISTER
entryRuleREGISTER returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getREGISTERRule()); }
	 iv_ruleREGISTER=ruleREGISTER 
	 { $current=$iv_ruleREGISTER.current; } 
	 EOF 
;

// Rule REGISTER
ruleREGISTER returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_r0_0_0=	'r0' 
    {
        newLeafNode(lv_r0_0_0, grammarAccess.getREGISTERAccess().getR0R0Keyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r0", true, "r0");
	    }

)
)
    |(
(
		lv_r1_1_0=	'r1' 
    {
        newLeafNode(lv_r1_1_0, grammarAccess.getREGISTERAccess().getR1R1Keyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r1", true, "r1");
	    }

)
)
    |(
(
		lv_r2_2_0=	'r2' 
    {
        newLeafNode(lv_r2_2_0, grammarAccess.getREGISTERAccess().getR2R2Keyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r2", true, "r2");
	    }

)
)
    |(
(
		lv_r3_3_0=	'r3' 
    {
        newLeafNode(lv_r3_3_0, grammarAccess.getREGISTERAccess().getR3R3Keyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r3", true, "r3");
	    }

)
)
    |(
(
		lv_r4_4_0=	'r4' 
    {
        newLeafNode(lv_r4_4_0, grammarAccess.getREGISTERAccess().getR4R4Keyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r4", true, "r4");
	    }

)
)
    |(
(
		lv_r5_5_0=	'r5' 
    {
        newLeafNode(lv_r5_5_0, grammarAccess.getREGISTERAccess().getR5R5Keyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r5", true, "r5");
	    }

)
)
    |(
(
		lv_r6_6_0=	'r6' 
    {
        newLeafNode(lv_r6_6_0, grammarAccess.getREGISTERAccess().getR6R6Keyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r6", true, "r6");
	    }

)
)
    |(
(
		lv_r7_7_0=	'r7' 
    {
        newLeafNode(lv_r7_7_0, grammarAccess.getREGISTERAccess().getR7R7Keyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r7", true, "r7");
	    }

)
)
    |(
(
		lv_r8_8_0=	'r8' 
    {
        newLeafNode(lv_r8_8_0, grammarAccess.getREGISTERAccess().getR8R8Keyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r8", true, "r8");
	    }

)
)
    |(
(
		lv_r9_9_0=	'r9' 
    {
        newLeafNode(lv_r9_9_0, grammarAccess.getREGISTERAccess().getR9R9Keyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r9", true, "r9");
	    }

)
)
    |(
(
		lv_r10_10_0=	'r10' 
    {
        newLeafNode(lv_r10_10_0, grammarAccess.getREGISTERAccess().getR10R10Keyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r10", true, "r10");
	    }

)
)
    |(
(
		lv_r11_11_0=	'r11' 
    {
        newLeafNode(lv_r11_11_0, grammarAccess.getREGISTERAccess().getR11R11Keyword_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r11", true, "r11");
	    }

)
)
    |(
(
		lv_r12_12_0=	'r12' 
    {
        newLeafNode(lv_r12_12_0, grammarAccess.getREGISTERAccess().getR12R12Keyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r12", true, "r12");
	    }

)
)
    |(
(
		lv_r13_13_0=	'r13' 
    {
        newLeafNode(lv_r13_13_0, grammarAccess.getREGISTERAccess().getR13R13Keyword_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r13", true, "r13");
	    }

)
)
    |(
(
		lv_r14_14_0=	'r14' 
    {
        newLeafNode(lv_r14_14_0, grammarAccess.getREGISTERAccess().getR14R14Keyword_14_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r14", true, "r14");
	    }

)
)
    |(
(
		lv_r15_15_0=	'r15' 
    {
        newLeafNode(lv_r15_15_0, grammarAccess.getREGISTERAccess().getR15R15Keyword_15_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "r15", true, "r15");
	    }

)
)
    |(
(
		lv_rfp_16_0=	'fp' 
    {
        newLeafNode(lv_rfp_16_0, grammarAccess.getREGISTERAccess().getRfpFpKeyword_16_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "rfp", true, "fp");
	    }

)
)
    |(
(
		lv_rip_17_0=	'ip' 
    {
        newLeafNode(lv_rip_17_0, grammarAccess.getREGISTERAccess().getRipIpKeyword_17_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "rip", true, "ip");
	    }

)
)
    |(
(
		lv_rsp_18_0=	'sp' 
    {
        newLeafNode(lv_rsp_18_0, grammarAccess.getREGISTERAccess().getRspSpKeyword_18_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "rsp", true, "sp");
	    }

)
)
    |(
(
		lv_rlr_19_0=	'lr' 
    {
        newLeafNode(lv_rlr_19_0, grammarAccess.getREGISTERAccess().getRlrLrKeyword_19_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "rlr", true, "lr");
	    }

)
)
    |(
(
		lv_rpc_20_0=	'pc' 
    {
        newLeafNode(lv_rpc_20_0, grammarAccess.getREGISTERAccess().getRpcPcKeyword_20_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "rpc", true, "pc");
	    }

)
)
    |(
(
		lv_R001_21_0=	'R0' 
    {
        newLeafNode(lv_R001_21_0, grammarAccess.getREGISTERAccess().getR001R0Keyword_21_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R001", true, "R0");
	    }

)
)
    |(
(
		lv_R01_22_0=	'R1' 
    {
        newLeafNode(lv_R01_22_0, grammarAccess.getREGISTERAccess().getR01R1Keyword_22_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R01", true, "R1");
	    }

)
)
    |(
(
		lv_R02_23_0=	'R2' 
    {
        newLeafNode(lv_R02_23_0, grammarAccess.getREGISTERAccess().getR02R2Keyword_23_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R02", true, "R2");
	    }

)
)
    |(
(
		lv_R03_24_0=	'R3' 
    {
        newLeafNode(lv_R03_24_0, grammarAccess.getREGISTERAccess().getR03R3Keyword_24_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R03", true, "R3");
	    }

)
)
    |(
(
		lv_R04_25_0=	'R4' 
    {
        newLeafNode(lv_R04_25_0, grammarAccess.getREGISTERAccess().getR04R4Keyword_25_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R04", true, "R4");
	    }

)
)
    |(
(
		lv_R05_26_0=	'R5' 
    {
        newLeafNode(lv_R05_26_0, grammarAccess.getREGISTERAccess().getR05R5Keyword_26_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R05", true, "R5");
	    }

)
)
    |(
(
		lv_R06_27_0=	'R6' 
    {
        newLeafNode(lv_R06_27_0, grammarAccess.getREGISTERAccess().getR06R6Keyword_27_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R06", true, "R6");
	    }

)
)
    |(
(
		lv_R07_28_0=	'R7' 
    {
        newLeafNode(lv_R07_28_0, grammarAccess.getREGISTERAccess().getR07R7Keyword_28_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R07", true, "R7");
	    }

)
)
    |(
(
		lv_R08_29_0=	'R8' 
    {
        newLeafNode(lv_R08_29_0, grammarAccess.getREGISTERAccess().getR08R8Keyword_29_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R08", true, "R8");
	    }

)
)
    |(
(
		lv_R09_30_0=	'R9' 
    {
        newLeafNode(lv_R09_30_0, grammarAccess.getREGISTERAccess().getR09R9Keyword_30_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R09", true, "R9");
	    }

)
)
    |(
(
		lv_R010_31_0=	'R10' 
    {
        newLeafNode(lv_R010_31_0, grammarAccess.getREGISTERAccess().getR010R10Keyword_31_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R010", true, "R10");
	    }

)
)
    |(
(
		lv_R011_32_0=	'R11' 
    {
        newLeafNode(lv_R011_32_0, grammarAccess.getREGISTERAccess().getR011R11Keyword_32_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R011", true, "R11");
	    }

)
)
    |(
(
		lv_R012_33_0=	'R12' 
    {
        newLeafNode(lv_R012_33_0, grammarAccess.getREGISTERAccess().getR012R12Keyword_33_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R012", true, "R12");
	    }

)
)
    |(
(
		lv_R013_34_0=	'R13' 
    {
        newLeafNode(lv_R013_34_0, grammarAccess.getREGISTERAccess().getR013R13Keyword_34_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R013", true, "R13");
	    }

)
)
    |(
(
		lv_R014_35_0=	'R14' 
    {
        newLeafNode(lv_R014_35_0, grammarAccess.getREGISTERAccess().getR014R14Keyword_35_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R014", true, "R14");
	    }

)
)
    |(
(
		lv_R015_36_0=	'R15' 
    {
        newLeafNode(lv_R015_36_0, grammarAccess.getREGISTERAccess().getR015R15Keyword_36_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R015", true, "R15");
	    }

)
)
    |(
(
		lv_R0FP_37_0=	'FP' 
    {
        newLeafNode(lv_R0FP_37_0, grammarAccess.getREGISTERAccess().getR0FPFPKeyword_37_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R0FP", true, "FP");
	    }

)
)
    |(
(
		lv_R0IP_38_0=	'IP' 
    {
        newLeafNode(lv_R0IP_38_0, grammarAccess.getREGISTERAccess().getR0IPIPKeyword_38_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R0IP", true, "IP");
	    }

)
)
    |(
(
		lv_R0SP_39_0=	'SP' 
    {
        newLeafNode(lv_R0SP_39_0, grammarAccess.getREGISTERAccess().getR0SPSPKeyword_39_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R0SP", true, "SP");
	    }

)
)
    |(
(
		lv_R0LR_40_0=	'LR' 
    {
        newLeafNode(lv_R0LR_40_0, grammarAccess.getREGISTERAccess().getR0LRLRKeyword_40_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R0LR", true, "LR");
	    }

)
)
    |(
(
		lv_R0PC_41_0=	'PC' 
    {
        newLeafNode(lv_R0PC_41_0, grammarAccess.getREGISTERAccess().getR0PCPCKeyword_41_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getREGISTERRule());
	        }
       		setWithLastConsumed($current, "R0PC", true, "PC");
	    }

)
)
    |((	otherlv_42='\\' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getREGISTERAccess().getReverseSolidusKeyword_42_0());
    }
)?this_ID_43=RULE_ID
    { 
    newLeafNode(this_ID_43, grammarAccess.getREGISTERAccess().getIDTerminalRuleCall_42_1()); 
    }
))
;





// Entry rule entryRuleBAREL_SHIFT_REGISTER
entryRuleBAREL_SHIFT_REGISTER returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBAREL_SHIFT_REGISTERRule()); }
	 iv_ruleBAREL_SHIFT_REGISTER=ruleBAREL_SHIFT_REGISTER 
	 { $current=$iv_ruleBAREL_SHIFT_REGISTER.current; } 
	 EOF 
;

// Rule BAREL_SHIFT_REGISTER
ruleBAREL_SHIFT_REGISTER returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_BAREL_SHIFT_REGISTER_0_1=	'asr' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_1, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERAsrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_2=	'lsl' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_2, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERLslKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_3=	'lsr' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_3, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERLsrKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_4=	'ror' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_4, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERRorKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_5=	'ASR' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_5, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERASRKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_6=	'LSL' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_6, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERLSLKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_7=	'LSR' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_7, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERLSRKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_8=	'ROR' 
    {
        newLeafNode(lv_BAREL_SHIFT_REGISTER_0_8, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERRORKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed($current, "BAREL_SHIFT_REGISTER", true, null);
	    }

    |		lv_BAREL_SHIFT_REGISTER_0_9=RULE_ID
		{
			newLeafNode(lv_BAREL_SHIFT_REGISTER_0_9, grammarAccess.getBAREL_SHIFT_REGISTERAccess().getBAREL_SHIFT_REGISTERIDTerminalRuleCall_0_8()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBAREL_SHIFT_REGISTERRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"BAREL_SHIFT_REGISTER",
        		true, 
        		"ID");
	    }

)

)
)
;





// Entry rule entryRuleOperand2
entryRuleOperand2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperand2Rule()); }
	 iv_ruleOperand2=ruleOperand2 
	 { $current=$iv_ruleOperand2.current; } 
	 EOF 
;

// Rule Operand2
ruleOperand2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperand2Access().getImmediate_labelParserRuleCall_0()); 
    }
    this_immediate_label_0=ruleimmediate_label
    { 
        $current = $this_immediate_label_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getOperand2Access().getREGISTERParserRuleCall_1_0()); 
    }
    this_REGISTER_1=ruleREGISTER
    { 
        $current = $this_REGISTER_1.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperand2Access().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperand2Access().getOpshOpshParserRuleCall_1_1_1_0()); 
	    }
		lv_opsh_3_0=ruleopsh		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperand2Rule());
	        }
       		add(
       			$current, 
       			"opsh",
        		lv_opsh_3_0, 
        		"opsh");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleopsh
entryRuleopsh returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpshRule()); }
	 iv_ruleopsh=ruleopsh 
	 { $current=$iv_ruleopsh.current; } 
	 EOF 
;

// Rule opsh
ruleopsh returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpshAccess().getReverseSolidusKeyword_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getOpshAccess().getBAREL_SHIFT_REGISTERParserRuleCall_1()); 
    }
    this_BAREL_SHIFT_REGISTER_1=ruleBAREL_SHIFT_REGISTER
    { 
        $current = $this_BAREL_SHIFT_REGISTER_1.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpshAccess().getImmediate_labelImmediate_labelParserRuleCall_2_0_0()); 
	    }
		lv_immediate_label_2_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpshRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_2_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOpshAccess().getRegisterREGISTERParserRuleCall_2_1_0()); 
	    }
		lv_register_3_0=ruleREGISTER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpshRule());
	        }
       		add(
       			$current, 
       			"register",
        		lv_register_3_0, 
        		"REGISTER");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleimmediate_label
entryRuleimmediate_label returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImmediate_labelRule()); }
	 iv_ruleimmediate_label=ruleimmediate_label 
	 { $current=$iv_ruleimmediate_label.current; } 
	 EOF 
;

// Rule immediate_label
ruleimmediate_label returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getImmediate_labelAccess().getLiteral_numericLiteral_numericParserRuleCall_0_0()); 
	    }
		lv_literal_numeric_0_0=ruleliteral_numeric		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImmediate_labelRule());
	        }
       		add(
       			$current, 
       			"literal_numeric",
        		lv_literal_numeric_0_0, 
        		"literal_numeric");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getImmediate_labelAccess().getNumeric_backward_forwardNumeric_backward_forwardParserRuleCall_1_0()); 
	    }
		lv_numeric_backward_forward_1_0=rulenumeric_backward_forward		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImmediate_labelRule());
	        }
       		add(
       			$current, 
       			"numeric_backward_forward",
        		lv_numeric_backward_forward_1_0, 
        		"numeric_backward_forward");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((	otherlv_2='\\' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImmediate_labelAccess().getReverseSolidusKeyword_2_0());
    }
)?((	otherlv_3='#' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImmediate_labelAccess().getNumberSignKeyword_2_1_0_0());
    }

    |	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImmediate_labelAccess().getEqualsSignKeyword_2_1_0_1());
    }

    |	otherlv_5='$' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImmediate_labelAccess().getDollarSignKeyword_2_1_0_2());
    }

    |	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getImmediate_labelAccess().getFullStopKeyword_2_1_0_3());
    }

    |	otherlv_7='_' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getImmediate_labelAccess().get_Keyword_2_1_0_4());
    }
)?(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getImmediate_labelAccess().getLeftParenthesisKeyword_2_1_1());
    }
)?((
(
		lv_label_9_0=RULE_ID
		{
			newLeafNode(lv_label_9_0, grammarAccess.getImmediate_labelAccess().getLabelIDTerminalRuleCall_2_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImmediate_labelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_9_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getImmediate_labelAccess().getNum2MyINTParserRuleCall_2_1_2_1_0()); 
	    }
		lv_num2_10_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImmediate_labelRule());
	        }
       		set(
       			$current, 
       			"num2",
        		lv_num2_10_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
))((	otherlv_11='|' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getImmediate_labelAccess().getVerticalLineKeyword_2_1_3_0_0());
    }

    |	otherlv_12='+' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getImmediate_labelAccess().getPlusSignKeyword_2_1_3_0_1());
    }

    |	otherlv_13='-' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getImmediate_labelAccess().getHyphenMinusKeyword_2_1_3_0_2());
    }

    |	otherlv_14='*' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getImmediate_labelAccess().getAsteriskKeyword_2_1_3_0_3());
    }

    |	otherlv_15='/' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getImmediate_labelAccess().getSolidusKeyword_2_1_3_0_4());
    }
)+((
(
		lv_label2_16_0=RULE_ID
		{
			newLeafNode(lv_label2_16_0, grammarAccess.getImmediate_labelAccess().getLabel2IDTerminalRuleCall_2_1_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImmediate_labelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label2",
        		lv_label2_16_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getImmediate_labelAccess().getNumMyINTParserRuleCall_2_1_3_1_1_0()); 
	    }
		lv_num_17_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImmediate_labelRule());
	        }
       		set(
       			$current, 
       			"num",
        		lv_num_17_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)))*(	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getImmediate_labelAccess().getRightParenthesisKeyword_2_1_4());
    }
)?)))
;





// Entry rule entryRuledescription
entryRuledescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruledescription=ruledescription 
	 { $current=$iv_ruledescription.current; } 
	 EOF 
;

// Rule description
ruledescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='%' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getPercentSignKeyword_0_0());
    }

    |	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDescriptionAccess().getNumberSignKeyword_0_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionAccess().getIntMyINTParserRuleCall_1_0_0()); 
	    }
		lv_int_2_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionRule());
	        }
       		add(
       			$current, 
       			"int",
        		lv_int_2_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_string_3_0=RULE_STRING
		{
			newLeafNode(lv_string_3_0, grammarAccess.getDescriptionAccess().getStringSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_description_4_0=RULE_ID
		{
			newLeafNode(lv_description_4_0, grammarAccess.getDescriptionAccess().getDescriptionIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRulevariable
entryRulevariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_rulevariable=rulevariable 
	 { $current=$iv_rulevariable.current; } 
	 EOF 
;

// Rule variable
rulevariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getLeftParenthesisKeyword_0_0());
    }

    |	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getNumberSignKeyword_0_1());
    }

    |	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getEqualsSignKeyword_0_2());
    }

    |	otherlv_3='$' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getDollarSignKeyword_0_3());
    }

    |	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getFullStopKeyword_0_4());
    }

    |	otherlv_5='_' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableAccess().get_Keyword_0_5());
    }

    |	otherlv_6='+' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariableAccess().getPlusSignKeyword_0_6());
    }

    |	otherlv_7='-' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVariableAccess().getHyphenMinusKeyword_0_7());
    }

    |	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVariableAccess().getAsteriskKeyword_0_8());
    }

    |	otherlv_9='/' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVariableAccess().getSolidusKeyword_0_9());
    }

    |	otherlv_10='&' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVariableAccess().getAmpersandKeyword_0_10());
    }

    |	otherlv_11='\\' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVariableAccess().getReverseSolidusKeyword_0_11());
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getVariableIntMyINTParserRuleCall_1_0_0()); 
	    }
		lv_variableInt_12_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"variableInt",
        		lv_variableInt_12_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_variableABC_13_0=RULE_ID
		{
			newLeafNode(lv_variableABC_13_0, grammarAccess.getVariableAccess().getVariableABCIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableABC",
        		lv_variableABC_13_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_variableString_14_0=RULE_STRING
		{
			newLeafNode(lv_variableString_14_0, grammarAccess.getVariableAccess().getVariableStringSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableString",
        		lv_variableString_14_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_variableHex_15_0=RULE_HEX
		{
			newLeafNode(lv_variableHex_15_0, grammarAccess.getVariableAccess().getVariableHexHEXTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableHex",
        		lv_variableHex_15_0, 
        		"HEX");
	    }

)
))(	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVariableAccess().getRightParenthesisKeyword_2());
    }
)?)
;





// Entry rule entryRuledefinition
entryRuledefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruledefinition=ruledefinition 
	 { $current=$iv_ruledefinition.current; } 
	 EOF 
;

// Rule definition
ruledefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_0_0());
    }

    |	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getNumberSignKeyword_0_1());
    }

    |	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefinitionAccess().getEqualsSignKeyword_0_2());
    }

    |	otherlv_3='$' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getDollarSignKeyword_0_3());
    }

    |	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDefinitionAccess().getFullStopKeyword_0_4());
    }

    |	otherlv_5='_' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().get_Keyword_0_5());
    }

    |	otherlv_6='+' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDefinitionAccess().getPlusSignKeyword_0_6());
    }

    |	otherlv_7='-' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDefinitionAccess().getHyphenMinusKeyword_0_7());
    }

    |	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDefinitionAccess().getAsteriskKeyword_0_8());
    }

    |	otherlv_9='/' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDefinitionAccess().getSolidusKeyword_0_9());
    }

    |	otherlv_10='&' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDefinitionAccess().getAmpersandKeyword_0_10());
    }

    |	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDefinitionAccess().getColonKeyword_0_11());
    }

    |	otherlv_12='\\' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDefinitionAccess().getReverseSolidusKeyword_0_12());
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getVariableIntMyINTParserRuleCall_1_0_0()); 
	    }
		lv_variableInt_13_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"variableInt",
        		lv_variableInt_13_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_variableABC_14_0=RULE_ID
		{
			newLeafNode(lv_variableABC_14_0, grammarAccess.getDefinitionAccess().getVariableABCIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableABC",
        		lv_variableABC_14_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_variableString_15_0=RULE_STRING
		{
			newLeafNode(lv_variableString_15_0, grammarAccess.getDefinitionAccess().getVariableStringSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableString",
        		lv_variableString_15_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_variableHex_16_0=RULE_HEX
		{
			newLeafNode(lv_variableHex_16_0, grammarAccess.getDefinitionAccess().getVariableHexHEXTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variableHex",
        		lv_variableHex_16_0, 
        		"HEX");
	    }

)
))(	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDefinitionAccess().getColonKeyword_2_0());
    }

    |(	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDefinitionAccess().getEqualsSignKeyword_2_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getDefIntMyINTParserRuleCall_2_1_1_0_0()); 
	    }
		lv_defInt_19_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"defInt",
        		lv_defInt_19_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_defABC_20_0=RULE_ID
		{
			newLeafNode(lv_defABC_20_0, grammarAccess.getDefinitionAccess().getDefABCIDTerminalRuleCall_2_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defABC",
        		lv_defABC_20_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_defString_21_0=RULE_STRING
		{
			newLeafNode(lv_defString_21_0, grammarAccess.getDefinitionAccess().getDefStringSTRINGTerminalRuleCall_2_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defString",
        		lv_defString_21_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_defHex_22_0=RULE_HEX
		{
			newLeafNode(lv_defHex_22_0, grammarAccess.getDefinitionAccess().getDefHexHEXTerminalRuleCall_2_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defHex",
        		lv_defHex_22_0, 
        		"HEX");
	    }

)
))))?(	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_3());
    }
)?)
;





// Entry rule entryRulerandomEntry
entryRulerandomEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomEntryRule()); }
	 iv_rulerandomEntry=rulerandomEntry 
	 { $current=$iv_rulerandomEntry.current; } 
	 EOF 
;

// Rule randomEntry
rulerandomEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRandomEntryAccess().getNumberSignKeyword_0_0());
    }

    |	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandomEntryAccess().getEqualsSignKeyword_0_1());
    }

    |	otherlv_2='$' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomEntryAccess().getDollarSignKeyword_0_2());
    }

    |	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomEntryAccess().getFullStopKeyword_0_3());
    }

    |	otherlv_4='_' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRandomEntryAccess().get_Keyword_0_4());
    }

    |	otherlv_5='+' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRandomEntryAccess().getPlusSignKeyword_0_5());
    }

    |	otherlv_6='-' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRandomEntryAccess().getHyphenMinusKeyword_0_6());
    }

    |	otherlv_7='&' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRandomEntryAccess().getAmpersandKeyword_0_7());
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomEntryAccess().getEntryIntMyINTParserRuleCall_1_0_0()); 
	    }
		lv_entryInt_8_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomEntryRule());
	        }
       		set(
       			$current, 
       			"entryInt",
        		lv_entryInt_8_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_entryABC_9_0=RULE_ID
		{
			newLeafNode(lv_entryABC_9_0, grammarAccess.getRandomEntryAccess().getEntryABCIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryABC",
        		lv_entryABC_9_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_entryString_10_0=RULE_STRING
		{
			newLeafNode(lv_entryString_10_0, grammarAccess.getRandomEntryAccess().getEntryStringSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryString",
        		lv_entryString_10_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_entryHex_11_0=RULE_HEX
		{
			newLeafNode(lv_entryHex_11_0, grammarAccess.getRandomEntryAccess().getEntryHexHEXTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryHex",
        		lv_entryHex_11_0, 
        		"HEX");
	    }

)
)))
;





// Entry rule entryRulers_sh
entryRulers_sh returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRs_shRule()); }
	 iv_rulers_sh=rulers_sh 
	 { $current=$iv_rulers_sh.current; } 
	 EOF 
;

// Rule rs_sh
rulers_sh returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRs_shAccess().getREGISTERParserRuleCall_0()); 
    }
    this_REGISTER_0=ruleREGISTER
    { 
        $current = $this_REGISTER_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    { 
        newCompositeNode(grammarAccess.getRs_shAccess().getBAREL_SHIFT_REGISTERParserRuleCall_1_0()); 
    }
    this_BAREL_SHIFT_REGISTER_1=ruleBAREL_SHIFT_REGISTER
    { 
        $current = $this_BAREL_SHIFT_REGISTER_1.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRs_shAccess().getImmediate_labelImmediate_labelParserRuleCall_1_1_0()); 
	    }
		lv_immediate_label_2_0=ruleimmediate_label		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRs_shRule());
	        }
       		add(
       			$current, 
       			"immediate_label",
        		lv_immediate_label_2_0, 
        		"immediate_label");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;







// Entry rule entryRuleliteral_numeric
entryRuleliteral_numeric returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteral_numericRule()); }
	 iv_ruleliteral_numeric=ruleliteral_numeric 
	 { $current=$iv_ruleliteral_numeric.current; } 
	 EOF 
;

// Rule literal_numeric
ruleliteral_numeric returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hex_0_0=RULE_HEX
		{
			newLeafNode(lv_hex_0_0, grammarAccess.getLiteral_numericAccess().getHexHEXTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_numericRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_0_0, 
        		"HEX");
	    }

)
)
    |(
(
		lv_int_1_0=RULE_PLUS_MINUS_INT
		{
			newLeafNode(lv_int_1_0, grammarAccess.getLiteral_numericAccess().getIntPLUS_MINUS_INTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_numericRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int",
        		lv_int_1_0, 
        		"PLUS_MINUS_INT");
	    }

)
))
;





// Entry rule entryRulenumeric_backward_forward
entryRulenumeric_backward_forward returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeric_backward_forwardRule()); }
	 iv_rulenumeric_backward_forward=rulenumeric_backward_forward 
	 { $current=$iv_rulenumeric_backward_forward.current; } 
	 EOF 
;

// Rule numeric_backward_forward
rulenumeric_backward_forward returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hex_0_0=RULE_HEX
		{
			newLeafNode(lv_hex_0_0, grammarAccess.getNumeric_backward_forwardAccess().getHexHEXTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumeric_backward_forwardRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_0_0, 
        		"HEX");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getNumeric_backward_forwardAccess().getIntMyINTParserRuleCall_1_0_0()); 
	    }
		lv_int_1_0=rulemyINT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeric_backward_forwardRule());
	        }
       		set(
       			$current, 
       			"int",
        		lv_int_1_0, 
        		"myINT");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='f' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumeric_backward_forwardAccess().getFKeyword_1_1_0());
    }

    |	otherlv_3='F' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumeric_backward_forwardAccess().getFKeyword_1_1_1());
    }

    |	otherlv_4='b' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNumeric_backward_forwardAccess().getBKeyword_1_1_2());
    }

    |	otherlv_5='B' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNumeric_backward_forwardAccess().getBKeyword_1_1_3());
    }
)?))
;





// Entry rule entryRulemyINT
entryRulemyINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMyINTRule()); } 
	 iv_rulemyINT=rulemyINT 
	 { $current=$iv_rulemyINT.current.getText(); }  
	 EOF 
;

// Rule myINT
rulemyINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getMyINTAccess().getINTTerminalRuleCall_0()); 
    }

    |
	kw='16' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMyINTAccess().getDigitOneDigitSixKeyword_1()); 
    }

    |
	kw='32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMyINTAccess().getDigitThreeDigitTwoKeyword_2()); 
    }
)
    ;





RULE_ADD_COM : ('add'|'ADD') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ADC_COM : ('adc'|'ADC') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ADR_COM : ('adr'|'ADR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_SUB_COM : ('sub'|'SUB') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_SBC_COM : ('sbc'|'SBC') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_RSB_COM : ('rsb'|'RSB') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_RSC_COM : ('rsc'|'RSC') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ADRL_COM : ('adrl'|'ADRL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_MUL_3R_COM : ('mul'|'MUL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_MUL_4R_COM : ('mls'|'MLS') RULE_CONDITION_SUFFIX?;

RULE_MLA_COM : ('mla'|'MLA') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_UMULL_COM : ('umull'|'UMULL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_UMLAL_COM : ('umlal'|'UMLAL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_SMULL_COM : ('smull'|'SMULL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_SMLAL_COM : ('smlal'|'SMLAL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_SMUL_COM : ('smul'|'SMUL') RULE_XY_LABEL RULE_XY_LABEL RULE_CONDITION_SUFFIX?;

RULE_SMULW_COM : ('smulw'|'SMULW') RULE_XY_LABEL RULE_XY_LABEL RULE_CONDITION_SUFFIX?;

RULE_SMLA_COM : ('smla'|'SMLA') RULE_XY_LABEL RULE_XY_LABEL RULE_CONDITION_SUFFIX?;

RULE_SMLAW_COM : ('smlaw'|'SMLAW') RULE_XY_LABEL RULE_XY_LABEL RULE_CONDITION_SUFFIX?;

RULE_MOV_COM : ('mov'|'MOV') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_MVN_COM : ('mvn'|'MVN') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ASR_COM : ('asr'|'ASR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_LSL_COM : ('lsl'|'LSL') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_LSR_COM : ('lsr'|'LSR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ROR_COM : ('ror'|'ROR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_RRX_COM : ('rrx'|'RRX') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_CLZ_COM : ('clz'|'CLZ') RULE_CONDITION_SUFFIX?;

RULE_CMP_COM : ('cmp'|'CMP') RULE_CONDITION_SUFFIX?;

RULE_CMN_COM : ('cmn'|'CMN') RULE_CONDITION_SUFFIX?;

RULE_TST_COM : ('tst'|'TST') RULE_CONDITION_SUFFIX?;

RULE_TEQ_COM : ('teq'|'TEQ') RULE_CONDITION_SUFFIX?;

RULE_AND_COM : ('and'|'AND') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_EOR_COM : ('eor'|'EOR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ORR_COM : ('orr'|'ORR') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_ORN_COM : ('orn'|'ORN') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_BIC_COM : ('bic'|'BIC') RULE_CONDITION_SUFFIX? ('s'|'S')?;

RULE_B_COM : ('b'|'B') RULE_CONDITION_SUFFIX?;

RULE_BL_COM : ('bl'|'BL') RULE_CONDITION_SUFFIX?;

RULE_BX_COM : ('bx'|'BX') RULE_CONDITION_SUFFIX?;

RULE_BLX_COM : ('blx'|'BLX') RULE_CONDITION_SUFFIX?;

RULE_BXJ_COM : ('bxj'|'BXJ') RULE_CONDITION_SUFFIX?;

RULE_MRS_COM : ('mrs'|'MRS') RULE_CONDITION_SUFFIX?;

RULE_MSR_COM : ('msr'|'MSR') RULE_CONDITION_SUFFIX?;

RULE_LDR_COM : ('ldr'|'LDR') RULE_CONDITION_SUFFIX? RULE_XY_LABEL?;

RULE_STR_COM : ('str'|'STR') RULE_CONDITION_SUFFIX? RULE_XY_LABEL?;

RULE_LDM_COM : ('ldm'|'LDM') RULE_CONDITION_SUFFIX? RULE_ADDRESING_MODE?;

RULE_STM_COM : ('stm'|'STM') RULE_CONDITION_SUFFIX? RULE_ADDRESING_MODE?;

RULE_PUSH_COM : ('push'|'PUSH') RULE_CONDITION_SUFFIX?;

RULE_POP_COM : ('pop'|'POP') RULE_CONDITION_SUFFIX?;

RULE_SWP_COM : ('swp'|'SWP') RULE_CONDITION_SUFFIX?;

RULE_SWPB_COM : ('swpb'|'SWPB') RULE_CONDITION_SUFFIX?;

RULE_SVC_COM : ('svc'|'SVC') RULE_CONDITION_SUFFIX?;

RULE_PSR_FIELD : RULE_PSR ('_' RULE_FIELD+)?;

RULE_FIELD : ('c'|'f'|'s'|'x'|'all'|'C'|'F'|'S'|'X'|'ALL');

RULE_PSR : ('cpsr'|'spsr'|'CPSR'|'SPSR');

RULE_APSR_FLAG : ('apsr'|'APSR') ('_' RULE_FLAGS+)?;

RULE_FLAGS : ('nzcvq'|'g'|'NZCVQ'|'G');

RULE_XY_LABEL : ('b'|'bt'|'sb'|'h'|'sh'|'B'|'BT'|'SB'|'H'|'SH');

RULE_CONDITION_SUFFIX : ('eq'|'ne'|'cs'|'hs'|'cc'|'lo'|'mi'|'pl'|'vs'|'vc'|'hi'|'ls'|'ge'|'lt'|'gt'|'le'|'al'|'EQ'|'NE'|'CS'|'HS'|'CC'|'LO'|'MI'|'PL'|'VS'|'VC'|'HI'|'LS'|'GE'|'LT'|'GT'|'LE'|'AL');

RULE_ADDRESING_MODE : ('ia'|'fd'|'ea'|'ib'|'ed'|'fa'|'da'|'db'|'IA'|'FD'|'EA'|'IB'|'ED'|'FA'|'DA'|'DB');

RULE_HEX : ('='|'#')? ('0x'|'&') ('0'..'9'|'a'..'f'|'A'..'F')*;

RULE_PLUS_MINUS_INT : ('='|'#') ('+'|'-')? RULE_INT;

RULE_SL_COMMENT : ('@'|'//') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


